{"version":3,"sources":["nav/navBar.jsx","board/newTask.js","nav/updateRes.jsx","board/board.js","boards/bf.js","boards/boardForm.js","boards/boards.js","nav/showRute.js","loginReg/register.js","loginReg/login.js","loginReg/loginReg.js","root.jsx","index.js","img/trash-can.svg","img/user.svg","img/register2.svg","img/logout2.svg","img/grab.png"],"names":["Nav","props","isLog","localStorage","getItem","userName","useState","displayNav","setDisplayNav","className","style","flex","to","onClick","history","removeItem","src","logout","alt","userin","reg","CreateTaskW","ntRef","useRef","errMessage","setErrMessage","useEffect","document","addEventListener","handleClickOutside","removeEventListener","e","current","contains","target","close","ref","borderTop","onSubmit","preventDefault","form","title","value","description","addTask","titleTask","type","name","placeholder","rows","color","NewTask","task","display","UpdateRes","message","messages","setMessage","reftitle","React","createRef","createTask","titleTable","tables","setTables","boardName","redirect","tablesCopy","tableToAddtask","find","c","errMessageFunc","content","filter","ta","length","token","process","push","axios","url","method","headers","data","boardTitle","tableTitle","then","res","catch","err","TableMapper","setnewTask","map","table","key","tc","copyTables","JSON","parse","stringify","t","removeTable","droppableId","place","provided","snapshot","droppableProps","innerRef","backgroundColor","isDraggingOver","indx","draggableId","index","draggableProps","dragHandleProps","isDragging","taskIndex","splice","removeTask","tableID","Board","undefined","newTask","response","status","pathname","latestProps","match","params","onDragEnd","result","tableTitleTo","tableTitleFrom","destination","rmItem","source","indexTo","indexTable","findIndex","copytask","tablescopy","indexTableFrom","indexTableTo","tableFrom","tableTo","copyTaskFrom","copyTaskTo","taskTitle","newTable","createTable","Bf","setDisplay","rf","onCreateBoard","event","titleNewBoard","CreateButton","BoardForm","wrapperRefForm","DragHandle","SortableHandle","hand","SortableList","SortableContainer","items","removeBoard","SortableItem","SortableElement","tabIndex","marginTop","Boards","errHandler","setState","firstFetch","board","prev","copy","boardsObs","b","bind","onSortEnd","oldIndex","newIndex","newOrder","arrayMove","boardsOrder","createBoard","state","includes","prevs","location","user","this","get","boards","console","log","_getBoards","helperClass","useDragHandle","messager","axis","Component","ShowRoute","routes","split","route","Reg","password","setUser","setErr","handleChange","_validateFields","test","_isErrMessage","noValidate","Username","setItem","succesReqHandler","errorHandler","borderBottom","onChange","LoginReg","loginWindow","path","toLocaleLowerCase","Root","ShowRoutep","withRouter","NavWithp","exact","component","BoardTest","extact","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.89d50aca.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./nav.css\";\r\nimport userin from \"../img/user.svg\";\r\nimport reg from \"../img/register2.svg\";\r\nimport logout from \"../img/logout2.svg\";\r\n\r\nconst logOutUser = history => {\r\n  localStorage.removeItem(\"userName\");\r\n  localStorage.removeItem(\"UserToken\");\r\n};\r\n\r\nconst Nav = props => {\r\n  let isLog = localStorage.getItem(\"userName\");\r\n  let userName = localStorage.getItem(\"userName\") || \"UserTest\";\r\n  const [displayNav, setDisplayNav] = useState(false);\r\n  return (\r\n    <header\r\n      className={displayNav ? (isLog ? \"displayNavB1\" : \"displayNavB2\") : \"\"}\r\n    >\r\n      <div style={{ flex: \"1\" }}>\r\n        <Link to=\"/Reacllo/\">Reacllo</Link>\r\n      </div>\r\n      <div className=\"userNav\">\r\n        <Link to=\"/Reacllo/\">{userName} </Link>\r\n        <span\r\n          className={displayNav ? \"hide\" : \"hide twist\"}\r\n          onClick={() => setDisplayNav(!displayNav)}\r\n        >\r\n          |||\r\n        </span>\r\n      </div>\r\n      <nav className=\"mobileDisplay\">\r\n        {(isLog && (\r\n          <div className=\"buttons\">\r\n            <Link to=\"/Reacllo/\">\r\n              <button\r\n                onClick={() => {\r\n                  setDisplayNav(!displayNav);\r\n                  logOutUser(props.history);\r\n                }}\r\n              >\r\n                <img src={logout} className=\"imgButton\" alt=\"cerrar sesión\" />\r\n                &nbsp; Cerrar&nbsp; sesión\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        )) || (\r\n          <div className=\"buttons\">\r\n            <Link to=\"/Reacllo/login/\">\r\n              <button onClick={() => setDisplayNav(!displayNav)}>\r\n                <img src={userin} className=\"imgButton\" alt=\"Ingresa\" />\r\n                &nbsp; Ingresa\r\n              </button>\r\n            </Link>\r\n            <Link to=\"/Reacllo/register/\">\r\n              <button onClick={() => setDisplayNav(!displayNav)}>\r\n                <img src={reg} className=\"imgButton\" alt=\"Registrate\" />\r\n                &nbsp;Registrate\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\n\r\nconst NewTask = props => {\r\n  return props.task.display && <CreateTaskW {...props} />;\r\n};\r\n\r\nconst CreateTaskW = props => {\r\n  let ntRef = useRef(null);\r\n  const [errMessage, setErrMessage] = useState(\"\");\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClickOutside, false);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClickOutside, false);\r\n    };\r\n  });\r\n\r\n  const handleClickOutside = e => {\r\n    if (ntRef.current && !ntRef.current.contains(e.target)) {\r\n      props.close();\r\n    }\r\n  };\r\n  const handleCreateForm = e => {\r\n    e.preventDefault();\r\n    let form = e.target;\r\n    let title = form.title.value;\r\n    let description = form.description.value;\r\n    if (!title || !description) {\r\n      setErrMessage(\"necesita titulo y descripcion\");\r\n      return;\r\n    }\r\n    props.addTask(\r\n      { titleTask: title, description: description },\r\n      setErrMessage,\r\n      props.close\r\n    );\r\n  };\r\n  return (\r\n    /*falta reacer la parte del error en nueva tarea 8) */\r\n    <div className=\"blackbackground\">\r\n      <div\r\n        ref={ntRef}\r\n        className=\"containerf newTask\"\r\n        style={{\r\n          borderTop: `3px solid ${!errMessage ? \"#00ADBB\" : \"#e81123\"}`\r\n        }}\r\n      >\r\n        <form onSubmit={handleCreateForm}>\r\n          <button\r\n            className=\"close\"\r\n            onClick={e => {\r\n              e.preventDefault();\r\n              props.close();\r\n            }}\r\n          >\r\n            x\r\n          </button>\r\n          <h3> Nueva Tarea </h3>\r\n          <div className=\"field\">\r\n            <label>Titulo</label>\r\n\r\n            <div>\r\n              <input type=\"text\" name=\"title\" placeholder=\"Ingrese un titulo\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Descripcion</label>\r\n            <textarea\r\n              rows=\"5\"\r\n              name=\"description\"\r\n              placeholder=\"Ingrese una descripción\"\r\n            />\r\n          </div>\r\n          <button className=\"send\" type=\"submit\">\r\n            Crear Nueva Tarea\r\n          </button>\r\n\r\n          {errMessage && (\r\n            <p\r\n              className=\"resMessage\"\r\n              style={{\r\n                color: \"#e81123\"\r\n              }}\r\n            >\r\n              {errMessage}\r\n            </p>\r\n          )}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewTask;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./updateRes.css\";\r\nconst UpdateRes = ({ message }) => {\r\n  const [messages, setMessage] = useState(\"\");\r\n  useEffect(() => {\r\n    setMessage(message);\r\n  }, [message]);\r\n\r\n  return (\r\n    <>\r\n      {messages && (\r\n        <div className=\"updateRes\">\r\n          <p>{messages}</p>\r\n          <p onClick={() => setMessage(\"\")} className=\"closeUpdateRes\">\r\n            x\r\n          </p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default UpdateRes;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport tc from \"../img/trash-can.svg\";\r\nimport NewTask from \"./newTask\";\r\nimport UpdateRes from \"../nav/updateRes\";\r\nimport \"./board.css\";\r\nimport axios from \"axios\";\r\n\r\nlet reftitle = React.createRef();\r\n\r\nconst onDragEnd = (\r\n  result,\r\n  tables,\r\n  setTables,\r\n  boardName,\r\n  setMessage,\r\n  redirect\r\n) => {\r\n  /* taskTitle, boardTitle, tableTitleFrom, tableTitleTo, indexTo */\r\n  let tableTitleTo;\r\n  let tableTitleFrom;\r\n\r\n  if (!result.destination) return;\r\n\r\n  let { source, destination } = result;\r\n  let indexTo = destination.index;\r\n  let rmItem;\r\n  if (destination.droppableId === source.droppableId) {\r\n    let indexTable = tables.findIndex(c => c.titleTable === source.droppableId);\r\n    let table = tables[indexTable];\r\n    let copytask = [...table.content];\r\n    let tablescopy = [...tables];\r\n    rmItem = copytask.splice(source.index, 1)[0];\r\n    copytask.splice(destination.index, 0, rmItem);\r\n    tablescopy.splice(indexTable, 1, {\r\n      ...table,\r\n      content: copytask\r\n    });\r\n    tableTitleTo = destination.droppableId;\r\n    tableTitleFrom = destination.droppableId;\r\n    setTables(tablescopy);\r\n  }\r\n  if (destination.droppableId !== source.droppableId) {\r\n    let indexTableFrom = tables.findIndex(\r\n      c => c.titleTable === source.droppableId\r\n    );\r\n    let indexTableTo = tables.findIndex(\r\n      c => c.titleTable === destination.droppableId\r\n    );\r\n    let tableFrom = tables[indexTableFrom];\r\n    let tableTo = tables[indexTableTo];\r\n    let copyTaskFrom = [...tableFrom.content];\r\n    let copyTaskTo = [...tableTo.content];\r\n    let tablesCopy = [...tables];\r\n    rmItem = copyTaskFrom.splice(source.index, 1)[0];\r\n    copyTaskTo.splice(destination.index, 0, rmItem);\r\n    tablesCopy.splice(indexTableFrom, 1, {\r\n      ...tableFrom,\r\n      content: copyTaskFrom\r\n    });\r\n    tablesCopy.splice(indexTableTo, 1, { ...tableTo, content: copyTaskTo });\r\n\r\n    tableTitleTo = destination.droppableId;\r\n    tableTitleFrom = source.droppableId;\r\n    setTables(tablesCopy);\r\n  }\r\n\r\n  let token =\r\n    localStorage.getItem(\"UserToken\") || process.env.REACT_APP_DEFAULT_TOKEN;\r\n  axios({\r\n    url: `https://kanban-api-node.herokuapp.com/board/table/task`,\r\n    method: \"Patch\",\r\n    data: {\r\n      boardTitle: boardName,\r\n      tableTitleTo: tableTitleTo,\r\n      tableTitleFrom: tableTitleFrom,\r\n      taskTitle: rmItem.titleTask,\r\n      indexTo: indexTo\r\n    },\r\n    headers: { token: token }\r\n  })\r\n    .then(\r\n      res => setMessage(\"se reordeno la tarea correctamente\") //message confirm\r\n    )\r\n    .catch(err => redirect(err));\r\n  setMessage(\"actualizando ...\");\r\n};\r\nconst removeTable = (\r\n  tableTitle,\r\n  tables,\r\n  setTables,\r\n  boardName,\r\n  setMessage,\r\n  redirect\r\n) => {\r\n  let copyTables = JSON.parse(\r\n    JSON.stringify(tables.filter(t => t.titleTable !== tableTitle))\r\n  );\r\n\r\n  let token =\r\n    localStorage.getItem(\"UserToken\") || process.env.REACT_APP_DEFAULT_TOKEN;\r\n  let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\r\n  axios({\r\n    url: `${uri}/board/table/`,\r\n    method: \"Delete\",\r\n    headers: { token: token },\r\n    data: { boardTitle: boardName, tableTitle: tableTitle }\r\n  })\r\n    .then(\r\n      res => setMessage(\"se borro correctamente la tabla\") //message confirm\r\n    )\r\n    .catch(err => redirect(err));\r\n  setTables(copyTables);\r\n\r\n  setMessage(\"actualizando ...\");\r\n};\r\nconst createTable = (\r\n  titleTable,\r\n  tables,\r\n  setTables,\r\n  boardName,\r\n  setMessage,\r\n  redirect\r\n) => {\r\n  let token =\r\n    localStorage.getItem(\"UserToken\") || process.env.REACT_APP_DEFAULT_TOKEN;\r\n  if (tables.filter(t => t.titleTable === titleTable).length > 0) {\r\n    setMessage(\"ya existe una tabla con ese nombre\");\r\n    return;\r\n  }\r\n  let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\r\n  axios({\r\n    url: `${uri}/board/table/`,\r\n    method: \"Post\",\r\n    headers: { token: token },\r\n    data: { boardTitle: boardName, tableTitle: titleTable }\r\n  })\r\n    .then(\r\n      res => setMessage(\"se agrego correctamente la tabla\") /*message confirm */\r\n    )\r\n    .catch(err => {\r\n      redirect(err);\r\n    });\r\n  let newTable = { titleTable: titleTable, content: [] };\r\n  setTables([...tables, newTable]);\r\n  setMessage(\"actualizando ...\");\r\n};\r\nconst createTask = (\r\n  titleTable,\r\n  tables,\r\n  setTables,\r\n  boardName,\r\n  setMessage,\r\n  redirect\r\n) => {\r\n  let tablesCopy = [...tables];\r\n  let tableToAddtask = tablesCopy.find(c => c.titleTable === titleTable);\r\n\r\n  return (task, errMessageFunc, close) => {\r\n    if (task) {\r\n      if (\r\n        tableToAddtask.content.filter(ta => ta.titleTask === task.titleTask)\r\n          .length > 0\r\n      ) {\r\n        //setMessage(\"ya existe una tarea con ese nombre\");\r\n        errMessageFunc(\"ya existe una tarea con ese nombre\");\r\n        return;\r\n      }\r\n\r\n      let token =\r\n        localStorage.getItem(\"UserToken\") ||\r\n        process.env.REACT_APP_DEFAULT_TOKEN;\r\n      tableToAddtask.content.push(task);\r\n      let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\r\n      axios({\r\n        url: `${uri}/board/table/task/`,\r\n        method: \"Post\",\r\n        headers: { token: token },\r\n        data: { boardTitle: boardName, tableTitle: titleTable, task: task }\r\n      })\r\n        .then(res => setMessage(\"se agrego correctamente la tarea\"))\r\n        .catch(err => redirect(err));\r\n      close();\r\n      setTables(tablesCopy);\r\n\r\n      setMessage(\"actualizando ...\");\r\n    }\r\n  };\r\n};\r\nconst removeTask = (\r\n  titleTable,\r\n  taskIndex,\r\n  task,\r\n  tables,\r\n  setTables,\r\n  boardName,\r\n  setMessage,\r\n  redirect\r\n) => {\r\n  let copyTables = [...tables];\r\n  let table = copyTables.find(t => t.titleTable === titleTable);\r\n  table.content.splice(taskIndex, 1);\r\n\r\n  let token =\r\n    localStorage.getItem(\"UserToken\") || process.env.REACT_APP_DEFAULT_TOKEN;\r\n  let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\r\n  axios({\r\n    url: `${uri}/board/table/task/`,\r\n    method: \"delete\",\r\n    headers: { token: token },\r\n    data: {\r\n      boardTitle: boardName,\r\n      tableTitle: titleTable,\r\n      titleTask: task.titleTask\r\n    }\r\n  })\r\n    .then(res => setMessage(\"se borro correctamente la tarea\"))\r\n    .catch(err => redirect(err));\r\n  setTables(copyTables);\r\n};\r\nconst TableMapper = ({\r\n  tables,\r\n  setTables,\r\n  boardTitle,\r\n  setMessage,\r\n  setnewTask,\r\n  redirect\r\n}) => {\r\n  return tables.map(table => {\r\n    return (\r\n      <div key={table.titleTable} className=\"table\">\r\n        <h3 className=\"title\">{table.titleTable}</h3>\r\n        <img\r\n          src={tc}\r\n          alt=\"\"\r\n          className=\"trashCan tablehide\"\r\n          title=\"borrar tabla\"\r\n          onClick={() =>\r\n            removeTable(\r\n              table.titleTable,\r\n              tables,\r\n              setTables,\r\n              boardTitle,\r\n              setMessage,\r\n              redirect\r\n            )\r\n          }\r\n        />\r\n\r\n        <Droppable key={table.titleTable} droppableId={table.titleTable} place>\r\n          {(provided, snapshot) => {\r\n            return (\r\n              <div\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n                className=\"listContainer\"\r\n                style={{\r\n                  backgroundColor: snapshot.isDraggingOver ? \"lightblue\" : \"\"\r\n                }}\r\n              >\r\n                {table.content.map((task, indx) => {\r\n                  return (\r\n                    <Draggable\r\n                      key={task.titleTask}\r\n                      draggableId={task.titleTask}\r\n                      index={indx}\r\n                    >\r\n                      {(provided, snapshot) => {\r\n                        return (\r\n                          <div\r\n                            ref={provided.innerRef}\r\n                            {...provided.draggableProps}\r\n                            {...provided.dragHandleProps}\r\n                            className=\"itemList\"\r\n                            style={{\r\n                              backgroundColor: snapshot.isDragging\r\n                                ? \"#CFD8DC\"\r\n                                : \"#FAFAFA\",\r\n                              ...provided.draggableProps.style\r\n                            }}\r\n                          >\r\n                            <p className=\"title\">{task.titleTask}</p>\r\n                            <img\r\n                              src={tc}\r\n                              className=\"trashCan taskhide\"\r\n                              title=\"borrar tarea\"\r\n                              alt=\"\"\r\n                              onClick={() => {\r\n                                removeTask(\r\n                                  table.titleTable,\r\n                                  indx,\r\n                                  task,\r\n                                  tables,\r\n                                  setTables,\r\n                                  boardTitle,\r\n                                  setMessage\r\n                                );\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        );\r\n                      }}\r\n                    </Draggable>\r\n                  );\r\n                })}\r\n                {provided.placeholder}\r\n              </div>\r\n            );\r\n          }}\r\n        </Droppable>\r\n\r\n        <div className=\"containerButtonNewTask\">\r\n          <button\r\n            title=\"crear una nueva tarea\"\r\n            className=\"newTask\"\r\n            onClick={() =>\r\n              setnewTask({ display: true, tableID: table.titleTable })\r\n            }\r\n          >\r\n            +\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n};\r\nfunction Board(props) {\r\n  const [tables, setTables] = useState([]);\r\n  const [newTask, setnewTask] = useState({\r\n    display: false,\r\n    tableID: undefined\r\n  });\r\n  const redirect = props => err => {\r\n    if (err.response.status === 401) {\r\n      localStorage.removeItem(\"UserToken\");\r\n      localStorage.removeItem(\"userName\");\r\n      props.history.push({\r\n        pathname: \"/boards\",\r\n        message:\r\n          \"La ultima accion no pudo guardarse debido a que los permisos del usuario caducaron, ingrese nuevamente \"\r\n      }); /*setear mensaje de log out */\r\n    }\r\n    if (\r\n      err.response.status === 400 &&\r\n      err.response.data.message === \"Board not found\"\r\n    ) {\r\n      props.history.push({\r\n        pathname: \"/boards\",\r\n        message: \"No existe una pizarra con ese titulo \"\r\n      });\r\n    }\r\n  };\r\n  const [message, setMessage] = useState(\"\");\r\n  const latestProps = useRef(props);\r\n  useEffect(() => {\r\n    latestProps.current = props;\r\n  });\r\n  useEffect(() => {\r\n    let token =\r\n      localStorage.getItem(\"UserToken\") || process.env.REACT_APP_DEFAULT_TOKEN;\r\n    let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\r\n    axios({\r\n      url: `${uri}/board/${latestProps.current.match.params.boardTitle}`,\r\n      method: \"Get\",\r\n      headers: { token: token }\r\n    })\r\n      .then(res => {\r\n        setTables(res.data.tables);\r\n      })\r\n      .catch(err => redirect(latestProps.current)(err));\r\n  }, []);\r\n  return (\r\n    <>\r\n      <NewTask\r\n        task={newTask}\r\n        close={() => setnewTask({ display: false, tableID: undefined })}\r\n        addTask={createTask(\r\n          newTask.tableID,\r\n          tables,\r\n          setTables,\r\n          props.match.params.boardTitle,\r\n          setMessage\r\n        )}\r\n      />\r\n      <UpdateRes message={message} />\r\n      <div className=\"boardW\">\r\n        {\" \"}\r\n        <DragDropContext\r\n          onDragEnd={result =>\r\n            onDragEnd(\r\n              result,\r\n              tables,\r\n              setTables,\r\n              props.match.params.boardTitle,\r\n              setMessage,\r\n              redirect(props)\r\n            )\r\n          }\r\n        >\r\n          <TableMapper\r\n            tables={tables}\r\n            setTables={setTables}\r\n            boardTitle={props.match.params.boardTitle}\r\n            setMessage={setMessage}\r\n            setnewTask={setnewTask}\r\n            redirect={redirect(props)}\r\n          />\r\n        </DragDropContext>\r\n        <div className=\"newTable\">\r\n          {\" \"}\r\n          {/*pasaje a componente*/}\r\n          <input\r\n            ref={reftitle}\r\n            type=\"text\"\r\n            placeholder=\"Crear una nueva Tabla\"\r\n          />\r\n          <button\r\n            title=\"crear una nueva tabla\"\r\n            onClick={e => {\r\n              e.preventDefault();\r\n              reftitle.current.value\r\n                ? (() => {\r\n                    createTable(\r\n                      reftitle.current.value,\r\n                      tables,\r\n                      setTables,\r\n                      props.match.params.boardTitle,\r\n                      setMessage,\r\n                      redirect(props)\r\n                    );\r\n                    reftitle.current.value = \"\";\r\n                  })()\r\n                : (() => {})();\r\n            }}\r\n          >\r\n            {\" \"}\r\n            +\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Board;\r\n","import React, { useEffect } from \"react\";\r\nconst Bf = ({ setDisplay, rf, onCreateBoard, setMessage }) => {\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClickOutside, false);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClickOutside, false);\r\n    };\r\n  });\r\n\r\n  const handleClickOutside = event => {\r\n    if (rf.current && !rf.current.contains(event.target)) {\r\n      setDisplay(false);\r\n    }\r\n  };\r\n  const handleCreate = e => {\r\n    e.preventDefault();\r\n    if (!e.target.titleNewBoard.value) {\r\n      setMessage(\"La pizarra tiene que tener un titulo\");\r\n      return;\r\n    }\r\n\r\n    let title = e.target.titleNewBoard.value;\r\n    onCreateBoard(title);\r\n    setDisplay(false);\r\n  };\r\n  return (\r\n    <div ref={rf} className=\"board \">\r\n      <form onSubmit={handleCreate} className=\"formNewBoard\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Escriba un titulo\"\r\n          name=\"titleNewBoard\"\r\n          className=\"titleNewBoard\"\r\n        />\r\n        <button className=\"buttonCreateBoard\" type=\"submit\">\r\n          Crear\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default Bf;\r\n","import React, { useState, useRef } from \"react\";\r\nimport Bf from \"./bf\";\r\n\r\nconst CreateButton = ({ setDisplay }) => {\r\n  return (\r\n    /*ultimo a arreglar */\r\n    <div className=\"board containerButton\" onClick={() => setDisplay(true)}>\r\n      <button className=\"buttonCBoard\">Crea una nueva pizarra</button>\r\n    </div>\r\n  );\r\n};\r\nconst BoardForm = props => {\r\n  let wrapperRefForm = useRef(null);\r\n  const [display, setDisplay] = useState(false);\r\n\r\n  return (\r\n    (display && (\r\n      <Bf setDisplay={setDisplay} rf={wrapperRefForm} {...props} />\r\n    )) || <CreateButton setDisplay={setDisplay} />\r\n  );\r\n};\r\nexport default BoardForm;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  SortableContainer,\r\n  SortableElement,\r\n  SortableHandle\r\n} from \"react-sortable-hoc\";\r\nimport { Link } from \"react-router-dom\";\r\nimport arrayMove from \"array-move\";\r\nimport tc from \"../img/trash-can.svg\";\r\nimport hand from \"../img/grab.png\";\r\nimport \"./boards.css\";\r\nimport axios from \"axios\";\r\nimport UpdateRes from \"../nav/updateRes\";\r\nimport BoardForm from \"./boardForm\";\r\n\r\nconst DragHandle = SortableHandle(() => {\r\n  return (\r\n    <span className=\"position\" title=\"arrastrame para reordenar\">\r\n      <img src={hand} alt=\"arrastrame\" />\r\n    </span>\r\n  );\r\n});\r\nconst SortableList = SortableContainer(\r\n  ({ items, removeBoard, onCreateBoard, setMessage }) => {\r\n    return (\r\n      <ul>\r\n        {items.map((value, index) => (\r\n          <SortableItem\r\n            removeBoard={removeBoard}\r\n            key={`item-${value + index}`}\r\n            index={index}\r\n            value={value}\r\n          />\r\n        ))}\r\n        <li>\r\n          <BoardForm onCreateBoard={onCreateBoard} setMessage={setMessage} />\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n);\r\n\r\nconst SortableItem = SortableElement(({ value, removeBoard }) => {\r\n  return (\r\n    <li tabIndex={value} /*position relative */>\r\n      <div className=\"board\">\r\n        <img\r\n          src={tc}\r\n          className=\"trashCan boardhide boardt\"\r\n          title=\"remove board\"\r\n          alt=\"\"\r\n          onClick={() => {\r\n            removeBoard(value);\r\n          }}\r\n        />\r\n        <DragHandle />\r\n        <Link to={`/Reacllo/board/${value}`}>\r\n          <h4 style={{ marginTop: \"12px\" }}>{value}</h4>\r\n          <div style={{ display: \"flex\" }}>\r\n            <div className=\"row\" />\r\n            <div className=\"row\" />\r\n            <div className=\"row\" />\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    </li>\r\n  );\r\n});\r\n\r\nclass Boards extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      boardsObs: [],\r\n      firstFetch: true,\r\n      message: props.location.message\r\n    };\r\n    this.setState = this.setState.bind(this);\r\n  }\r\n\r\n  errHandler = err => {\r\n    localStorage.removeItem(\"UserToken\");\r\n    localStorage.removeItem(\"userName\");\r\n    if (err.response.status === 401) {\r\n      this.setState({\r\n        message:\r\n          \"La ultima accion no pudo guardarse debido a que los permisos del usuario caducaron, logueese nuevamente\",\r\n        firstFetch: true\r\n      });\r\n    }\r\n  };\r\n\r\n  removeBoard = board => {\r\n    let token =\r\n      localStorage.getItem(\"UserToken\") || process.env.REACT_APP_DEFAULT_TOKEN;\r\n    let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\r\n    axios({\r\n      url: `${uri}/board/`,\r\n      method: \"DELETE\",\r\n      headers: { token: token },\r\n      data: { boardTitle: board }\r\n    })\r\n      .then(res => this.setState({ message: \"se borro exitosamente\" }))\r\n      .catch(err => this.errHandler(err));\r\n\r\n    this.setState(prev => {\r\n      let copy = [...prev.boardsObs];\r\n      copy.splice(\r\n        copy.findIndex(b => b === board),\r\n        1\r\n      );\r\n      return { boardsObs: copy, message: \"actualizando ...\" };\r\n    });\r\n  };\r\n\r\n  removeBoard = this.removeBoard.bind(this);\r\n\r\n  onSortEnd = ({ oldIndex, newIndex }) => {\r\n    this.setState(({ boardsObs }) => {\r\n      let token =\r\n        localStorage.getItem(\"UserToken\") ||\r\n        process.env.REACT_APP_DEFAULT_TOKEN;\r\n      let newOrder = arrayMove(boardsObs, oldIndex, newIndex);\r\n      let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\r\n      axios({\r\n        url: `${uri}/user/neworder`,\r\n        method: \"Patch\",\r\n        headers: { token: token },\r\n        data: { boardsOrder: newOrder }\r\n      })\r\n        .then(res => this.setState({ message: \"se reordeno exitosamente\" }))\r\n        .catch(err => this.errHandler(err));\r\n      return { boardsObs: newOrder, message: \"actualizando ...\" };\r\n    });\r\n  };\r\n  createBoard = board => {\r\n    let token =\r\n      localStorage.getItem(\"UserToken\") || process.env.REACT_APP_DEFAULT_TOKEN;\r\n\r\n    if (this.state.boardsObs.includes(board)) {\r\n      this.setState({ message: \"Existe una board con ese nombre\" });\r\n      return;\r\n    }\r\n    let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\r\n    axios({\r\n      url: `${uri}/board`,\r\n      method: \"POST\",\r\n      headers: { token: token },\r\n      data: { boardTitle: board }\r\n    })\r\n      .then(res => this.setState({ message: \"se guardo exitosamente\" }))\r\n      .catch(err => this.errHandler(err));\r\n    this.setState(prevs => {\r\n      return {\r\n        boardsObs: [...prevs.boardsObs, board],\r\n        message: \"actualizando ...\"\r\n      };\r\n    });\r\n  };\r\n\r\n  _getBoards() {\r\n    let user =\r\n      localStorage.getItem(\"userName\") || process.env.REACT_APP_DEFAULT_USER;\r\n    if (this.state.firstFetch) {\r\n      let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\r\n      axios\r\n        .get(`${uri}/user/${user}`)\r\n        .then(res => {\r\n          this.setState({ boardsObs: res.data.boards, firstFetch: false });\r\n        })\r\n        .catch(err => console.log(err.message));\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this._getBoards();\r\n  }\r\n  componentDidUpdate() {\r\n    this._getBoards();\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <UpdateRes message={this.state.message} />\r\n        <div className=\"boardsContainer\">\r\n          <SortableList\r\n            helperClass=\"sortableCursor\"\r\n            items={this.state.boardsObs}\r\n            onSortEnd={this.onSortEnd}\r\n            useDragHandle={true}\r\n            removeBoard={this.removeBoard}\r\n            onCreateBoard={this.createBoard}\r\n            setMessage={messager => this.setState({ message: messager })}\r\n            axis=\"xy\"\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Boards;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst ShowRoute = props => {\r\n  let routes = props.location.pathname.split(\"/\");\r\n  routes.splice(0, 1);\r\n  routes.splice(0, 1);\r\n\r\n  routes.splice(0, 1);\r\n  return (\r\n    <div className=\"showRoute\">\r\n      <Link to=\"/Reacllo/\">\r\n        <p>Mis pizarras&nbsp;&nbsp;/&nbsp;&nbsp;</p>\r\n      </Link>\r\n      {routes.map(route => (\r\n        <p key={route}>{route}</p>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default ShowRoute;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./formLr.css\";\r\nconst Reg = props => {\r\n  const [user, setUser] = useState({ userName: \"\", password: \"\" });\r\n  const [err, setErr] = useState({ userName: \"\", password: \"\" });\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setUser({\r\n      ...user,\r\n      [name]: value\r\n    });\r\n    setErr({ ...err, ..._validateFields(name, value) });\r\n\r\n    setMessage(\"\");\r\n  };\r\n  const _validateFields = (name, value) => {\r\n    let err = {};\r\n    if (name === \"userName\") {\r\n      err.userName =\r\n        value.length >= 4\r\n          ? \"\"\r\n          : \"El nombre de usuario debe ser mayor a 4 caracteres\";\r\n    }\r\n    if (name === \"password\") {\r\n      err.password = /^(?=.*[A-Z]).{4,}$/.test(value)\r\n        ? \"\"\r\n        : \"La contraseña debe tener almenos una mayuscula y entre 4 caracteres \";\r\n    }\r\n    return err;\r\n  };\r\n  const errorHandler = err => {\r\n    if (\"Username already exists\" === err.response.data.message) {\r\n      setMessage(\"Ese nombre de usuario ya se encuentra en uso\");\r\n      setUser({ userName: \"\", password: \"\" });\r\n    }\r\n  };\r\n  const succesReqHandler = res => {\r\n    setMessage(\"se registro exitosamente, ingresando...\");\r\n\r\n    let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\r\n    axios({\r\n      url: `${uri}/user/login/`,\r\n      data: { ...user, Username: user.userName },\r\n      method: \"post\"\r\n    })\r\n      .then(res => {\r\n        localStorage.setItem(\"userName\", user.userName);\r\n        localStorage.setItem(\"UserToken\", res.data.token);\r\n        props.history.push(\"/boards\");\r\n      })\r\n      .catch(err => {});\r\n  };\r\n  const _checkUserFieldsEmpty = () => {\r\n    if (!user.userName) {\r\n      setErr({ ...err, userName: \"El campo se encuentra vacio\" });\r\n    }\r\n    if (!user.password) {\r\n      setErr({ ...err, password: \"El campo se encuentra vacio\" });\r\n    }\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    _checkUserFieldsEmpty();\r\n    if (err.userName || err.password) {\r\n      setMessage(\"No se puede registrar este usuario\");\r\n      return;\r\n    }\r\n    let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\r\n    axios({\r\n      url: `${uri}/user/register/`,\r\n      data: { ...user, Username: user.userName },\r\n      method: \"post\"\r\n    })\r\n      .then(res => succesReqHandler(res))\r\n      .catch(err => errorHandler(err));\r\n  };\r\n\r\n  //condicion y llamada a axios\r\n  const _isErrMessage = () => {\r\n    return ![\r\n      \"No se puede registrar este usuario\",\r\n      \"Ese nombre de usuario ya se encuentra en uso\"\r\n    ].includes(message);\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        borderTop: `3px solid ${_isErrMessage() ? \"#00ADBB\" : \"#e81123\"}`\r\n      }}\r\n      className=\"containerf\"\r\n    >\r\n      <form noValidate onSubmit={handleSubmit}>\r\n        <h3>Registrate</h3>\r\n        <div className=\"field\">\r\n          <label>Nombre de Usuario</label>\r\n          <div>\r\n            <input\r\n              style={{\r\n                borderBottom: `2px solid ${\r\n                  !err.userName ? \"rgba(28,110,164,0.13)\" : \"#e81123\"\r\n                }`\r\n              }}\r\n              name=\"userName\"\r\n              type=\"text\"\r\n              placeholder=\"Ingrese su nombre de usuario\"\r\n              value={user.userName}\r\n              onChange={handleChange}\r\n            />\r\n            {err.userName && <p className=\"error\">{err.userName}</p>}\r\n          </div>\r\n        </div>\r\n        <div className=\"field\">\r\n          <label>Constraseña</label>\r\n          <div>\r\n            <input\r\n              style={{\r\n                borderBottom: `2px solid ${\r\n                  !err.password ? \"rgba(28,110,164,0.13)\" : \"#e81123\"\r\n                }`\r\n              }}\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Ingrese su contraseña\"\r\n              value={user.password}\r\n              onChange={handleChange}\r\n            />\r\n            {err.password && <p className=\"error\">{err.password}</p>}\r\n          </div>\r\n        </div>\r\n        <button className=\"send\" type=\"Submit\">\r\n          Enviar\r\n        </button>\r\n        {message && (\r\n          <p\r\n            className=\"resMessage\"\r\n            style={{\r\n              color: _isErrMessage() ? \"#00ADBB\" : \"#e81123\"\r\n            }}\r\n          >\r\n            {message}\r\n          </p>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default Reg;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Reg = props => {\r\n  const [user, setUser] = useState({ userName: \"\", password: \"\" });\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setUser({\r\n      ...user,\r\n      [name]: value\r\n    });\r\n  };\r\n  const errorHandler = err => {\r\n    setUser({ ...user, password: \"\" });\r\n    setMessage(\"El usuario o la contraseña es incorrecta\");\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (!user.userName || !user.password) {\r\n      setMessage(\"Usuario o Contraseña vacias\");\r\n      setUser({ ...user, password: \"\" });\r\n      return;\r\n    }\r\n    setMessage(\"Ingresando...\");\r\n\r\n    let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\r\n    axios({\r\n      url: `${uri}/user/login/`,\r\n      data: { ...user, Username: user.userName },\r\n      method: \"post\"\r\n    })\r\n      .then(res => {\r\n        localStorage.removeItem(\"userName\");\r\n        localStorage.setItem(\"userName\", user.userName);\r\n        localStorage.removeItem(\"UserToken\");\r\n        localStorage.setItem(\"UserToken\", res.data.token);\r\n        props.history.push(\"/boards\");\r\n      })\r\n      .catch(err => errorHandler(err));\r\n\r\n    //condicion y llamada a axios\r\n  };\r\n  const _isErrMessage = () => {\r\n    return ![\r\n      \"Usuario o Contraseña vacias\",\r\n      \"El usuario o la contraseña es incorrecta\"\r\n    ].includes(message);\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        borderTop: `3px solid ${_isErrMessage() ? \"#00ADBB\" : \"#e81123\"}`\r\n      }}\r\n      className=\"containerf\"\r\n    >\r\n      <form noValidate onSubmit={handleSubmit}>\r\n        <h3>Ingresar</h3>\r\n        <div className=\"field\">\r\n          <label>Nombre de Usuario</label>\r\n          <div>\r\n            <input\r\n              name=\"userName\"\r\n              type=\"text\"\r\n              value={user.userName}\r\n              placeholder=\"Ingrese su nombre de usuario\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"field\">\r\n          <label>Constraseña</label>\r\n          <div>\r\n            <input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={user.password}\r\n              placeholder=\"Ingrese su contraseña\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <button className=\"send\" type=\"Submit\">\r\n          Iniciar Sesión\r\n        </button>\r\n        {message && (\r\n          <p\r\n            className=\"resMessage\"\r\n            style={{\r\n              color: _isErrMessage() ? \"#00ADBB\" : \"#e81123\"\r\n            }}\r\n          >\r\n            {message}\r\n          </p>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default Reg;\r\n","import React from \"react\";\r\nimport Register from \"./register\";\r\nimport Login from \"./login\";\r\n\r\nconst LoginReg = props => {\r\n  let loginWindow = props.match.path.toLocaleLowerCase().includes(\"register\");\r\n  return (\r\n    <div className=\"loginContainer\">\r\n      {(loginWindow && <Register {...props} />) || <Login {...props} />}\r\n    </div>\r\n  );\r\n};\r\nexport default LoginReg;\r\n","import React from \"react\";\r\nimport Nav from \"./nav/navBar\";\r\nimport BoardTest from \"./board/board\";\r\nimport Boards from \"./boards/boards\";\r\nimport ShowRoute from \"./nav/showRute\";\r\nimport LoginReg from \"./loginReg/loginReg\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  withRouter\r\n} from \"react-router-dom\";\r\nconst Root = () => {\r\n  const ShowRoutep = withRouter(props => <ShowRoute {...props} />);\r\n  const NavWithp = withRouter(props => <Nav {...props} />);\r\n  return (\r\n    <Router>\r\n      <NavWithp />\r\n      <ShowRoutep />\r\n      <Switch>\r\n        <Route exact path=\"/Reacllo/board/:boardTitle\" component={BoardTest} />\r\n        <Route exact path=\"/Reacllo/boards/\" component={Boards} />\r\n        <Route exact path=\"/Reacllo/register/\" component={LoginReg} />\r\n        <Route extact path=\"/Reacllo/login/\" component={LoginReg} />\r\n        <Redirect to=\"/Reacllo/boards/\" />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Root;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Root from \"./root\";\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/trash-can.d7bec4e6.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.8702dc53.svg\";","module.exports = __webpack_public_path__ + \"static/media/register2.6503aab5.svg\";","module.exports = __webpack_public_path__ + \"static/media/logout2.0dd955fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/grab.a3189f25.png\";"],"sourceRoot":""}