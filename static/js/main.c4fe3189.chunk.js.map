{"version":3,"sources":["nav/navBar.jsx","board/taskUtil.js","nav/updateRes.jsx","board/board.js","boards/bf.js","boards/boardForm.js","boards/boards.js","nav/showRute.js","loginReg/register.js","loginReg/login.js","loginReg/loginReg.js","root.jsx","index.js","img/trash-can.svg","img/user.svg","img/register2.svg","img/logout2.svg","img/edit.svg","img/grab.png"],"names":["Nav","props","isLog","localStorage","getItem","userName","useState","displayNav","setDisplayNav","className","style","flex","to","onClick","history","removeItem","src","logout","alt","userin","reg","EditTaskW","close","errMessage","setErrMessage","editTask","task","ntRef","handleClickOutside","useEffect","document","addEventListener","removeEventListener","titleForm","buttonText","handleForm","e","preventDefault","form","target","title","value","description","titleTask","CreateTaskW","addTask","EmptyFormTaskW","ref","borderTop","onSubmit","type","name","placeholder","maxLength","defaultValue","rows","color","TaskWiewer","useRef","current","contains","taskWiewerInfo","display","UpdateRes","message","messages","setMessage","reftitle","React","createRef","createTask","titleTable","tables","setTables","boardName","redirect","titlesinUse","setTitlesTask","tablesCopy","tableToAddtask","find","c","errMessageFunc","title2Verify","toLowerCase","has","token","process","content","push","axios","url","method","headers","data","boardTitle","tableTitle","then","res","add","catch","err","tableToModifytask","oldTask","newTask","taskToModifyIndex","findIndex","t","titleTask2Remove","titleTask2Add","splice","titles","delete","taskTitleToRemove","TableMapper","setTaskViewerinfo","setTaskTitles","map","table","key","tc","copyTables","JSON","parse","stringify","filter","removeTable","droppableId","provided","snapshot","droppableProps","innerRef","backgroundColor","isDraggingOver","indx","draggableId","index","draggableProps","dragHandleProps","isDragging","taskIndex","removeTask","edit","tableID","Board","Set","taskTitlesinUse","undefined","response","status","pathname","latestProps","match","params","set2save","forEach","onDragEnd","result","tableTitleTo","tableTitleFrom","destination","rmItem","source","indexTo","indexTable","copytask","tablescopy","indexTableFrom","indexTableTo","tableFrom","tableTo","copyTaskFrom","copyTaskTo","taskTitle","length","newTable","createTable","Bf","setDisplay","rf","onCreateBoard","event","titleNewBoard","CreateButton","BoardForm","wrapperRefForm","DragHandle","SortableHandle","hand","SortableList","SortableContainer","items","removeBoard","SortableItem","SortableElement","tabIndex","marginTop","Boards","errHandler","setState","firstFetch","board","prev","copy","boardsObs","b","bind","onSortEnd","oldIndex","newIndex","newOrder","arrayMove","boardsOrder","createBoard","state","includes","prevs","location","user","this","get","boards","console","log","_getBoards","helperClass","useDragHandle","messager","axis","Component","ShowRoute","routes","split","route","Reg","password","setUser","setErr","handleChange","_validateFields","test","_isErrMessage","noValidate","Username","setItem","succesReqHandler","errorHandler","borderBottom","onChange","LoginReg","loginWindow","path","toLocaleLowerCase","Root","ShowRoutep","withRouter","NavWithp","exact","component","BoardTest","extact","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c4fe3189.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./nav.css\";\r\nimport userin from \"../img/user.svg\";\r\nimport reg from \"../img/register2.svg\";\r\nimport logout from \"../img/logout2.svg\";\r\n\r\nconst logOutUser = history => {\r\n  localStorage.removeItem(\"userName\");\r\n  localStorage.removeItem(\"UserToken\");\r\n};\r\n\r\nconst Nav = props => {\r\n  let isLog = localStorage.getItem(\"userName\");\r\n  let userName = localStorage.getItem(\"userName\") || \"UserTest\";\r\n  const [displayNav, setDisplayNav] = useState(false);\r\n  return (\r\n    <header\r\n      className={displayNav ? (isLog ? \"displayNavB1\" : \"displayNavB2\") : \"\"}\r\n    >\r\n      <div style={{ flex: \"1\" }}>\r\n        <Link to=\"/Reacllo/\">Reacllo</Link>\r\n      </div>\r\n      <div className=\"userNav\">\r\n        <Link to=\"/Reacllo/\">{userName} </Link>\r\n        <span\r\n          className={displayNav ? \"hide\" : \"hide twist\"}\r\n          onClick={() => setDisplayNav(!displayNav)}\r\n        >\r\n          |||\r\n        </span>\r\n      </div>\r\n      <nav className=\"mobileDisplay\">\r\n        {(isLog && (\r\n          <div className=\"buttons\">\r\n            <Link to=\"/Reacllo/\">\r\n              <button\r\n                onClick={() => {\r\n                  setDisplayNav(!displayNav);\r\n                  logOutUser(props.history);\r\n                }}\r\n              >\r\n                <img src={logout} className=\"imgButton\" alt=\"cerrar sesión\" />\r\n                &nbsp; Cerrar&nbsp; sesión\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        )) || (\r\n          <div className=\"buttons\">\r\n            <Link to=\"/Reacllo/login/\">\r\n              <button onClick={() => setDisplayNav(!displayNav)}>\r\n                <img src={userin} className=\"imgButton\" alt=\"Ingresa\" />\r\n                &nbsp; Ingresa\r\n              </button>\r\n            </Link>\r\n            <Link to=\"/Reacllo/register/\">\r\n              <button onClick={() => setDisplayNav(!displayNav)}>\r\n                <img src={reg} className=\"imgButton\" alt=\"Registrate\" />\r\n                &nbsp;Registrate\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\n\r\nconst TaskWiewer = props => {\r\n  let ntRef = useRef(null);\r\n  const handleClickOutside = e => {\r\n    if (ntRef.current && !ntRef.current.contains(e.target)) {\r\n      setErrMessage(\"\");\r\n      props.close();\r\n    }\r\n  };\r\n  const [errMessage, setErrMessage] = useState(\"\");\r\n\r\n  return (\r\n    props.taskWiewerInfo.display &&\r\n    ((!props.taskWiewerInfo.task && (\r\n      <CreateTaskW\r\n        {...props}\r\n        errMessage={errMessage}\r\n        ntRef={ntRef}\r\n        setErrMessage={setErrMessage}\r\n        handleClickOutside={handleClickOutside}\r\n      />\r\n    )) || (\r\n      <EditTaskW\r\n        {...props}\r\n        errMessage={errMessage}\r\n        ntRef={ntRef}\r\n        setErrMessage={setErrMessage}\r\n        handleClickOutside={handleClickOutside}\r\n        task={props.taskWiewerInfo.task}\r\n      />\r\n    ))\r\n  );\r\n};\r\nconst EditTaskW = ({\r\n  close,\r\n  errMessage,\r\n  setErrMessage,\r\n  editTask,\r\n  task,\r\n  ntRef,\r\n  handleClickOutside\r\n}) => {\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClickOutside, false);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClickOutside, false);\r\n    };\r\n  });\r\n  const handleEditForm = e => {\r\n    e.preventDefault();\r\n    let form = e.target;\r\n    let title = form.title.value;\r\n    let description = form.description.value;\r\n    if (!title || !description) {\r\n      setErrMessage(\"necesita titulo y descripcion\");\r\n      return;\r\n    } else {\r\n      if (title === task.titleTask && description === task.description) {\r\n        close();\r\n      } else {\r\n        editTask(\r\n          task,\r\n          { titleTask: title, description: description },\r\n          setErrMessage,\r\n          close\r\n        );\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <EmptyFormTaskW\r\n      titleForm=\"Editar Tarea\"\r\n      buttonText=\"Editar\"\r\n      close={close}\r\n      ntRef={ntRef}\r\n      handleForm={handleEditForm}\r\n      errMessage={errMessage}\r\n      title={task.titleTask}\r\n      description={task.description}\r\n    />\r\n  );\r\n};\r\nconst CreateTaskW = ({\r\n  close,\r\n  errMessage,\r\n  setErrMessage,\r\n  addTask,\r\n  ntRef,\r\n  handleClickOutside\r\n}) => {\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClickOutside, false);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClickOutside, false);\r\n    };\r\n  });\r\n  const handleCreateForm = e => {\r\n    e.preventDefault();\r\n    let form = e.target;\r\n    let title = form.title.value;\r\n    let description = form.description.value;\r\n    if (!title || !description) {\r\n      setErrMessage(\"necesita titulo y descripcion\");\r\n      return;\r\n    }\r\n    addTask(\r\n      { titleTask: title, description: description },\r\n      setErrMessage,\r\n      close\r\n    );\r\n  };\r\n  return (\r\n    <EmptyFormTaskW\r\n      titleForm=\"Nueva Tarea\"\r\n      buttonText=\"Crear\"\r\n      close={close}\r\n      ntRef={ntRef}\r\n      handleForm={handleCreateForm}\r\n      errMessage={errMessage}\r\n    />\r\n  );\r\n};\r\nconst EmptyFormTaskW = ({\r\n  titleForm,\r\n  buttonText,\r\n  close,\r\n  ntRef,\r\n  title,\r\n  description,\r\n  handleForm,\r\n  errMessage\r\n}) => {\r\n  return (\r\n    <div className=\"blackbackground\">\r\n      <div\r\n        ref={ntRef}\r\n        className=\"containerf newTask\"\r\n        style={{\r\n          borderTop: `3px solid ${!errMessage ? \"#00ADBB\" : \"#e81123\"}`\r\n        }}\r\n      >\r\n        <form onSubmit={handleForm}>\r\n          <button\r\n            className=\"close\"\r\n            onClick={e => {\r\n              e.preventDefault();\r\n              close();\r\n            }}\r\n          >\r\n            x\r\n          </button>\r\n          <h3> {titleForm} </h3>\r\n          <div className=\"field\">\r\n            <label>Titulo</label>\r\n\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"title\"\r\n                placeholder=\"Ingrese un titulo\"\r\n                maxLength=\"35\"\r\n                defaultValue={title || \"\"}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Descripcion</label>\r\n            <textarea\r\n              rows=\"5\"\r\n              name=\"description\"\r\n              placeholder=\"Ingrese una descripción\"\r\n              maxLength=\"155\"\r\n              defaultValue={description || \"\"}\r\n            />\r\n          </div>\r\n          <button className=\"send\" type=\"submit\">\r\n            {buttonText}\r\n          </button>\r\n\r\n          {errMessage && (\r\n            <p\r\n              className=\"resMessage\"\r\n              style={{\r\n                color: \"#e81123\"\r\n              }}\r\n            >\r\n              {errMessage}\r\n            </p>\r\n          )}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default TaskWiewer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./updateRes.css\";\r\nconst UpdateRes = ({ message }) => {\r\n  const [messages, setMessage] = useState(\"\");\r\n  useEffect(() => {\r\n    setMessage(message);\r\n  }, [message]);\r\n\r\n  return (\r\n    <>\r\n      {messages && (\r\n        <div className=\"updateRes\">\r\n          <p>{messages}</p>\r\n          <p onClick={() => setMessage(\"\")} className=\"closeUpdateRes\">\r\n            x\r\n          </p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default UpdateRes;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport tc from \"../img/trash-can.svg\";\r\nimport edit from \"../img/edit.svg\";\r\nimport TaskWiewer from \"./taskUtil\";\r\nimport UpdateRes from \"../nav/updateRes\";\r\nimport \"./board.css\";\r\nimport axios from \"axios\";\r\n\r\nlet reftitle = React.createRef();\r\n\r\nconst onDragEnd = (\r\n  result,\r\n  tables,\r\n  setTables,\r\n  boardName,\r\n  setMessage,\r\n  redirect\r\n) => {\r\n  /* taskTitle, boardTitle, tableTitleFrom, tableTitleTo, indexTo */\r\n  let tableTitleTo;\r\n  let tableTitleFrom;\r\n\r\n  if (!result.destination) return;\r\n\r\n  let { source, destination } = result;\r\n  let indexTo = destination.index;\r\n  let rmItem;\r\n  if (destination.droppableId === source.droppableId) {\r\n    let indexTable = tables.findIndex(c => c.titleTable === source.droppableId);\r\n    let table = tables[indexTable];\r\n    let copytask = [...table.content];\r\n    let tablescopy = [...tables];\r\n    rmItem = copytask.splice(source.index, 1)[0];\r\n    copytask.splice(destination.index, 0, rmItem);\r\n    tablescopy.splice(indexTable, 1, {\r\n      ...table,\r\n      content: copytask\r\n    });\r\n    tableTitleTo = destination.droppableId;\r\n    tableTitleFrom = destination.droppableId;\r\n    setTables(tablescopy);\r\n  }\r\n  if (destination.droppableId !== source.droppableId) {\r\n    let indexTableFrom = tables.findIndex(\r\n      c => c.titleTable === source.droppableId\r\n    );\r\n    let indexTableTo = tables.findIndex(\r\n      c => c.titleTable === destination.droppableId\r\n    );\r\n    let tableFrom = tables[indexTableFrom];\r\n    let tableTo = tables[indexTableTo];\r\n    let copyTaskFrom = [...tableFrom.content];\r\n    let copyTaskTo = [...tableTo.content];\r\n    let tablesCopy = [...tables];\r\n    rmItem = copyTaskFrom.splice(source.index, 1)[0];\r\n    copyTaskTo.splice(destination.index, 0, rmItem);\r\n    tablesCopy.splice(indexTableFrom, 1, {\r\n      ...tableFrom,\r\n      content: copyTaskFrom\r\n    });\r\n    tablesCopy.splice(indexTableTo, 1, { ...tableTo, content: copyTaskTo });\r\n\r\n    tableTitleTo = destination.droppableId;\r\n    tableTitleFrom = source.droppableId;\r\n    setTables(tablesCopy);\r\n  }\r\n\r\n  let token =\r\n    localStorage.getItem(\"UserToken\") || process.env.REACT_APP_DEFAULT_TOKEN;\r\n  axios({\r\n    url: `https://kanban-api-node.herokuapp.com/board/table/`,\r\n    method: \"Patch\",\r\n    data: {\r\n      boardTitle: boardName,\r\n      tableTitleTo: tableTitleTo,\r\n      tableTitleFrom: tableTitleFrom,\r\n      taskTitle: rmItem.titleTask,\r\n      indexTo: indexTo\r\n    },\r\n    headers: { token: token }\r\n  })\r\n    .then(\r\n      res => setMessage(\"se reordeno la tarea correctamente\") //message confirm\r\n    )\r\n    .catch(err => redirect(err));\r\n  setMessage(\"actualizando ...\");\r\n};\r\nconst removeTable = (\r\n  tableTitle,\r\n  tables,\r\n  setTables,\r\n  boardName,\r\n  setMessage,\r\n  redirect\r\n) => {\r\n  let copyTables = JSON.parse(\r\n    JSON.stringify(tables.filter(t => t.titleTable !== tableTitle))\r\n  );\r\n\r\n  let token =\r\n    localStorage.getItem(\"UserToken\") || process.env.REACT_APP_DEFAULT_TOKEN;\r\n  let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\r\n  axios({\r\n    url: `${uri}/board/table/`,\r\n    method: \"Delete\",\r\n    headers: { token: token },\r\n    data: { boardTitle: boardName, tableTitle: tableTitle }\r\n  })\r\n    .then(\r\n      res => setMessage(\"se borro correctamente la tabla\") //message confirm\r\n    )\r\n    .catch(err => redirect(err));\r\n  setTables(copyTables);\r\n\r\n  setMessage(\"actualizando ...\");\r\n};\r\nconst createTable = (\r\n  titleTable,\r\n  tables,\r\n  setTables,\r\n  boardName,\r\n  setMessage,\r\n  redirect\r\n) => {\r\n  let token =\r\n    localStorage.getItem(\"UserToken\") || process.env.REACT_APP_DEFAULT_TOKEN;\r\n  if (tables.filter(t => t.titleTable === titleTable).length > 0) {\r\n    setMessage(\"ya existe una tabla con ese nombre\");\r\n    return;\r\n  }\r\n  let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\r\n  axios({\r\n    url: `${uri}/board/table/`,\r\n    method: \"Post\",\r\n    headers: { token: token },\r\n    data: { boardTitle: boardName, tableTitle: titleTable }\r\n  })\r\n    .then(\r\n      res => setMessage(\"se agrego correctamente la tabla\") /*message confirm */\r\n    )\r\n    .catch(err => {\r\n      redirect(err);\r\n    });\r\n  let newTable = { titleTable: titleTable, content: [] };\r\n  setTables([...tables, newTable]);\r\n  setMessage(\"actualizando ...\");\r\n};\r\nconst createTask = (\r\n  titleTable,\r\n  tables,\r\n  setTables,\r\n  boardName,\r\n  setMessage,\r\n  redirect,\r\n  titlesinUse,\r\n  setTitlesTask\r\n) => {\r\n  let tablesCopy = [...tables];\r\n  let tableToAddtask = tablesCopy.find(c => c.titleTable === titleTable);\r\n\r\n  return (task, errMessageFunc, close) => {\r\n    if (task) {\r\n      let title2Verify = task.titleTask.toLowerCase();\r\n      if (titlesinUse.has(title2Verify)) {\r\n        errMessageFunc(\"ya existe una tarea con ese nombre\");\r\n        return;\r\n      }\r\n      let token =\r\n        localStorage.getItem(\"UserToken\") ||\r\n        process.env.REACT_APP_DEFAULT_TOKEN;\r\n      tableToAddtask.content.push(task);\r\n      let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\r\n      axios({\r\n        url: `${uri}/board/table/task/`,\r\n        method: \"Post\",\r\n        headers: { token: token },\r\n        data: { boardTitle: boardName, tableTitle: titleTable, task: task }\r\n      })\r\n        .then(res => {\r\n          setMessage(\"se agrego correctamente la tarea\");\r\n          setTitlesTask(titlesinUse => titlesinUse.add(title2Verify));\r\n        })\r\n        .catch(err => redirect(err));\r\n      close();\r\n      setTables(tablesCopy);\r\n      setMessage(\"actualizando ...\");\r\n    }\r\n  };\r\n};\r\nconst removeTask = (\r\n  /*2 modify */\r\n  titleTable,\r\n  taskIndex,\r\n  task,\r\n  tables,\r\n  setTables,\r\n  boardName,\r\n  setMessage,\r\n  redirect,\r\n  setTitlesTask\r\n) => {\r\n  let copyTables = [...tables];\r\n  let table = copyTables.find(t => t.titleTable === titleTable);\r\n  table.content.splice(taskIndex, 1);\r\n\r\n  let token =\r\n    localStorage.getItem(\"UserToken\") || process.env.REACT_APP_DEFAULT_TOKEN;\r\n  let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\r\n  axios({\r\n    url: `${uri}/board/table/task/`,\r\n    method: \"delete\",\r\n    headers: { token: token },\r\n    data: {\r\n      boardTitle: boardName,\r\n      tableTitle: titleTable,\r\n      titleTask: task.titleTask\r\n    }\r\n  })\r\n    .then(res => {\r\n      setMessage(\"se borro correctamente la tarea\");\r\n      setTitlesTask(titles => titles.delete(task.titleTask.toLowerCase()));\r\n    })\r\n    .catch(err => redirect(err));\r\n  setTables(copyTables);\r\n};\r\nconst editTask = (\r\n  /*a modify */\r\n  titleTable,\r\n  tables,\r\n  setTables,\r\n  boardName,\r\n  setMessage,\r\n  redirect,\r\n  titlesinUse,\r\n  setTitlesTask\r\n) => {\r\n  let tablesCopy = [...tables];\r\n  let tableToModifytask = tablesCopy.find(c => c.titleTable === titleTable);\r\n\r\n  return (oldTask, newTask, errMessageFunc, close) => {\r\n    let taskToModifyIndex = tableToModifytask.content.findIndex(\r\n      t => t.titleTask === oldTask.titleTask\r\n    );\r\n    let titleTask2Remove = oldTask.titleTask.toLowerCase();\r\n    let titleTask2Add = newTask.titleTask.toLowerCase();\r\n    if (titleTask2Add === titleTask2Remove || !titlesinUse.has(titleTask2Add)) {\r\n      tableToModifytask.content.splice(taskToModifyIndex, 1, newTask);\r\n      setTables(tablesCopy); /* miss api call*/\r\n      setTitlesTask(titles => {\r\n        titles.delete(titleTask2Remove);\r\n        return titles.add(titleTask2Add);\r\n      });\r\n      let token =\r\n        localStorage.getItem(\"UserToken\") ||\r\n        process.env.REACT_APP_DEFAULT_TOKEN;\r\n      let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\r\n      axios({\r\n        url: `${uri}/board/table/task/`,\r\n        method: \"Patch\",\r\n        headers: { token: token },\r\n        data: {\r\n          boardTitle: boardName,\r\n          tableTitle: titleTable,\r\n          taskTitleToRemove: oldTask.titleTask,\r\n          newTask: newTask\r\n        }\r\n      })\r\n        .then(res => {\r\n          setMessage(\"se modifico correctamente la tarea\");\r\n        })\r\n        .catch(err => redirect(err));\r\n      close();\r\n      setTables(tablesCopy);\r\n      setMessage(\"actualizando ...\");\r\n    } else errMessageFunc(\"Ya existe una tarea con ese nombre\");\r\n  };\r\n};\r\nconst TableMapper = ({\r\n  tables,\r\n  setTables,\r\n  boardTitle,\r\n  setMessage,\r\n  setTaskViewerinfo,\r\n  redirect,\r\n  setTaskTitles\r\n}) => {\r\n  return tables.map(table => {\r\n    return (\r\n      <div key={table.titleTable} className=\"table\">\r\n        <h3 className=\"title\">{table.titleTable}</h3>\r\n        <img\r\n          src={tc}\r\n          alt=\"\"\r\n          className=\"trashCan tablehide\"\r\n          title=\"borrar tabla\"\r\n          onClick={() =>\r\n            removeTable(\r\n              table.titleTable,\r\n              tables,\r\n              setTables,\r\n              boardTitle,\r\n              setMessage,\r\n              redirect\r\n            )\r\n          }\r\n        />\r\n\r\n        <Droppable key={table.titleTable} droppableId={table.titleTable}>\r\n          {(provided, snapshot) => {\r\n            return (\r\n              <div\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n                className=\"listContainer\"\r\n                style={{\r\n                  backgroundColor: snapshot.isDraggingOver ? \"lightblue\" : \"\"\r\n                }}\r\n              >\r\n                {table.content.map((task, indx) => {\r\n                  return (\r\n                    <Draggable\r\n                      key={task.titleTask}\r\n                      draggableId={task.titleTask}\r\n                      index={indx}\r\n                    >\r\n                      {(provided, snapshot) => {\r\n                        return (\r\n                          <div\r\n                            ref={provided.innerRef}\r\n                            {...provided.draggableProps}\r\n                            {...provided.dragHandleProps}\r\n                            className=\"itemList\"\r\n                            style={{\r\n                              backgroundColor: snapshot.isDragging\r\n                                ? \"#CFD8DC\"\r\n                                : \"#FAFAFA\",\r\n                              ...provided.draggableProps.style\r\n                            }}\r\n                          >\r\n                            <p className=\"title\">{task.titleTask}</p>\r\n                            <p className=\"description\">{task.description}</p>\r\n                            <img\r\n                              src={tc}\r\n                              className=\"trashCan taskhide\"\r\n                              title=\"borrar tarea\"\r\n                              alt=\"\"\r\n                              onClick={() => {\r\n                                removeTask(\r\n                                  table.titleTable,\r\n                                  indx,\r\n                                  task,\r\n                                  tables,\r\n                                  setTables,\r\n                                  boardTitle,\r\n                                  setMessage,\r\n                                  setTaskTitles\r\n                                );\r\n                              }}\r\n                            />\r\n                            <img\r\n                              src={edit}\r\n                              title=\"editar tarea\"\r\n                              className=\"edit\"\r\n                              alt=\"\"\r\n                              onClick={() =>\r\n                                setTaskViewerinfo({\r\n                                  display: true,\r\n                                  tableID: table.titleTable,\r\n                                  task: task\r\n                                })\r\n                              }\r\n                            />\r\n                          </div>\r\n                        );\r\n                      }}\r\n                    </Draggable>\r\n                  );\r\n                })}\r\n                {provided.placeholder}\r\n              </div>\r\n            );\r\n          }}\r\n        </Droppable>\r\n\r\n        <div className=\"containerButtonNewTask\">\r\n          <button\r\n            title=\"crear una nueva tarea\"\r\n            className=\"newTask\"\r\n            onClick={() =>\r\n              setTaskViewerinfo({\r\n                display: true,\r\n                tableID: table.titleTable /*edit aca new task */\r\n              })\r\n            }\r\n          >\r\n            +\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n};\r\nfunction Board(props) {\r\n  const [tables, setTables] = useState([]);\r\n  const [taskTitlesinUse, setTaskTitles] = useState(new Set());\r\n  const [taskWiewerInfo, setTaskViewerinfo] = useState({\r\n    display: false /*cambiar a tipo de view (newTask, editTask, none) */,\r\n\r\n    tableID: undefined /*se tiene que quedar para crear la nueva tarea */,\r\n    task: null /*en el caso de editarla */\r\n  });\r\n  const redirect = props => err => {\r\n    if (err.response.status === 401) {\r\n      localStorage.removeItem(\"UserToken\");\r\n      localStorage.removeItem(\"userName\");\r\n      props.history.push({\r\n        pathname: \"/boards\",\r\n        message:\r\n          \"La ultima accion no pudo guardarse debido a que los permisos del usuario caducaron, ingrese nuevamente \"\r\n      }); /*setear mensaje de log out */\r\n    }\r\n    if (\r\n      err.response.status === 400 &&\r\n      err.response.data.message === \"Board not found\"\r\n    ) {\r\n      props.history.push({\r\n        pathname: \"/boards\",\r\n        message: \"No existe una pizarra con ese titulo \"\r\n      });\r\n    }\r\n  };\r\n  const [message, setMessage] = useState(\"\");\r\n  const latestProps = useRef(props);\r\n  useEffect(() => {\r\n    latestProps.current = props;\r\n  });\r\n  useEffect(() => {\r\n    let token =\r\n      localStorage.getItem(\"UserToken\") || process.env.REACT_APP_DEFAULT_TOKEN;\r\n    let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\r\n    axios({\r\n      url: `${uri}/board/${latestProps.current.match.params.boardTitle}`,\r\n      method: \"Get\",\r\n      headers: { token: token }\r\n    })\r\n      .then(res => {\r\n        setTables(res.data.tables);\r\n        let set2save = new Set();\r\n        res.data.tables.forEach(table =>\r\n          table.content.forEach(task =>\r\n            set2save.add(task.titleTask.toLowerCase())\r\n          )\r\n        );\r\n        setTaskTitles(set2save);\r\n      })\r\n      .catch(err => redirect(latestProps.current)(err));\r\n  }, []);\r\n  return (\r\n    <>\r\n      <TaskWiewer\r\n        taskWiewerInfo={taskWiewerInfo}\r\n        close={() =>\r\n          setTaskViewerinfo({ display: false, tableID: undefined, task: null })\r\n        }\r\n        addTask={createTask(\r\n          taskWiewerInfo.tableID,\r\n          tables,\r\n          setTables,\r\n          props.match.params.boardTitle,\r\n          setMessage,\r\n          redirect,\r\n          taskTitlesinUse,\r\n          setTaskTitles\r\n        )}\r\n        editTask={editTask(\r\n          taskWiewerInfo.tableID,\r\n          tables,\r\n          setTables,\r\n          props.match.params.boardTitle,\r\n          setMessage,\r\n          redirect,\r\n          taskTitlesinUse,\r\n          setTaskTitles\r\n        )}\r\n      />\r\n      <UpdateRes message={message} />\r\n      <div className=\"boardW\">\r\n        {\" \"}\r\n        <DragDropContext\r\n          onDragEnd={result =>\r\n            onDragEnd(\r\n              result,\r\n              tables,\r\n              setTables,\r\n              props.match.params.boardTitle,\r\n              setMessage,\r\n              redirect(props)\r\n            )\r\n          }\r\n        >\r\n          <TableMapper\r\n            tables={tables}\r\n            setTables={setTables}\r\n            boardTitle={props.match.params.boardTitle}\r\n            setMessage={setMessage}\r\n            setTaskViewerinfo={setTaskViewerinfo}\r\n            setTaskTitles={setTaskTitles}\r\n            redirect={redirect(props)}\r\n          />\r\n        </DragDropContext>\r\n        <div className=\"newTable\">\r\n          {\" \"}\r\n          {/*pasaje a componente*/}\r\n          <input\r\n            ref={reftitle}\r\n            type=\"text\"\r\n            placeholder=\"Crear una nueva Tabla\"\r\n          />\r\n          <button\r\n            title=\"crear una nueva tabla\"\r\n            onClick={e => {\r\n              e.preventDefault();\r\n              if (reftitle.current.value) {\r\n                createTable(\r\n                  reftitle.current.value,\r\n                  tables,\r\n                  setTables,\r\n                  props.match.params.boardTitle,\r\n                  setMessage,\r\n                  redirect(props)\r\n                );\r\n                reftitle.current.value = \"\";\r\n              }\r\n            }}\r\n          >\r\n            {\" \"}\r\n            +\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Board;\r\n","import React, { useEffect } from \"react\";\r\nconst Bf = ({ setDisplay, rf, onCreateBoard, setMessage }) => {\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClickOutside, false);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClickOutside, false);\r\n    };\r\n  });\r\n\r\n  const handleClickOutside = event => {\r\n    if (rf.current && !rf.current.contains(event.target)) {\r\n      setDisplay(false);\r\n    }\r\n  };\r\n  const handleCreate = e => {\r\n    e.preventDefault();\r\n    if (!e.target.titleNewBoard.value) {\r\n      setMessage(\"La pizarra tiene que tener un titulo\");\r\n      return;\r\n    }\r\n\r\n    let title = e.target.titleNewBoard.value;\r\n    onCreateBoard(title);\r\n    setDisplay(false);\r\n  };\r\n  return (\r\n    <div ref={rf} className=\"board \">\r\n      <form onSubmit={handleCreate} className=\"formNewBoard\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Escriba un titulo\"\r\n          name=\"titleNewBoard\"\r\n          className=\"titleNewBoard\"\r\n        />\r\n        <button className=\"buttonCreateBoard\" type=\"submit\">\r\n          Crear\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default Bf;\r\n","import React, { useState, useRef } from \"react\";\r\nimport Bf from \"./bf\";\r\n\r\nconst CreateButton = ({ setDisplay }) => {\r\n  return (\r\n    /*ultimo a arreglar */\r\n    <div className=\"board containerButton\" onClick={() => setDisplay(true)}>\r\n      <button className=\"buttonCBoard\">Crea una nueva pizarra</button>\r\n    </div>\r\n  );\r\n};\r\nconst BoardForm = props => {\r\n  let wrapperRefForm = useRef(null);\r\n  const [display, setDisplay] = useState(false);\r\n\r\n  return (\r\n    (display && (\r\n      <Bf setDisplay={setDisplay} rf={wrapperRefForm} {...props} />\r\n    )) || <CreateButton setDisplay={setDisplay} />\r\n  );\r\n};\r\nexport default BoardForm;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  SortableContainer,\r\n  SortableElement,\r\n  SortableHandle\r\n} from \"react-sortable-hoc\";\r\nimport { Link } from \"react-router-dom\";\r\nimport arrayMove from \"array-move\";\r\nimport tc from \"../img/trash-can.svg\";\r\nimport hand from \"../img/grab.png\";\r\nimport \"./boards.css\";\r\nimport axios from \"axios\";\r\nimport UpdateRes from \"../nav/updateRes\";\r\nimport BoardForm from \"./boardForm\";\r\n\r\nconst DragHandle = SortableHandle(() => {\r\n  return (\r\n    <span className=\"position\" title=\"arrastrame para reordenar\">\r\n      <img src={hand} alt=\"arrastrame\" />\r\n    </span>\r\n  );\r\n});\r\nconst SortableList = SortableContainer(\r\n  ({ items, removeBoard, onCreateBoard, setMessage }) => {\r\n    return (\r\n      <ul>\r\n        {items.map((value, index) => (\r\n          <SortableItem\r\n            removeBoard={removeBoard}\r\n            key={`item-${value + index}`}\r\n            index={index}\r\n            value={value}\r\n          />\r\n        ))}\r\n        <li>\r\n          <BoardForm onCreateBoard={onCreateBoard} setMessage={setMessage} />\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n);\r\n\r\nconst SortableItem = SortableElement(({ value, removeBoard }) => {\r\n  return (\r\n    <li tabIndex={value} /*position relative */>\r\n      <div className=\"board\">\r\n        <img\r\n          src={tc}\r\n          className=\"trashCan boardhide boardt\"\r\n          title=\"remove board\"\r\n          alt=\"\"\r\n          onClick={() => {\r\n            removeBoard(value);\r\n          }}\r\n        />\r\n        <DragHandle />\r\n        <Link to={`/Reacllo/board/${value}`}>\r\n          <h4 style={{ marginTop: \"12px\" }}>{value}</h4>\r\n          <div style={{ display: \"flex\" }}>\r\n            <div className=\"row\" />\r\n            <div className=\"row\" />\r\n            <div className=\"row\" />\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    </li>\r\n  );\r\n});\r\n\r\nclass Boards extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      boardsObs: [],\r\n      firstFetch: true,\r\n      message: props.location.message\r\n    };\r\n    this.setState = this.setState.bind(this);\r\n  }\r\n\r\n  errHandler = err => {\r\n    localStorage.removeItem(\"UserToken\");\r\n    localStorage.removeItem(\"userName\");\r\n    if (err.response.status === 401) {\r\n      this.setState({\r\n        message:\r\n          \"La ultima accion no pudo guardarse debido a que los permisos del usuario caducaron, logueese nuevamente\",\r\n        firstFetch: true\r\n      });\r\n    }\r\n  };\r\n\r\n  removeBoard = board => {\r\n    let token =\r\n      localStorage.getItem(\"UserToken\") || process.env.REACT_APP_DEFAULT_TOKEN;\r\n    let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\r\n    axios({\r\n      url: `${uri}/board/`,\r\n      method: \"DELETE\",\r\n      headers: { token: token },\r\n      data: { boardTitle: board }\r\n    })\r\n      .then(res => this.setState({ message: \"se borro exitosamente\" }))\r\n      .catch(err => this.errHandler(err));\r\n\r\n    this.setState(prev => {\r\n      let copy = [...prev.boardsObs];\r\n      copy.splice(\r\n        copy.findIndex(b => b === board),\r\n        1\r\n      );\r\n      return { boardsObs: copy, message: \"actualizando ...\" };\r\n    });\r\n  };\r\n\r\n  removeBoard = this.removeBoard.bind(this);\r\n\r\n  onSortEnd = ({ oldIndex, newIndex }) => {\r\n    this.setState(({ boardsObs }) => {\r\n      let token =\r\n        localStorage.getItem(\"UserToken\") ||\r\n        process.env.REACT_APP_DEFAULT_TOKEN;\r\n      let newOrder = arrayMove(boardsObs, oldIndex, newIndex);\r\n      let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\r\n      axios({\r\n        url: `${uri}/user/neworder`,\r\n        method: \"Patch\",\r\n        headers: { token: token },\r\n        data: { boardsOrder: newOrder }\r\n      })\r\n        .then(res => this.setState({ message: \"se reordeno exitosamente\" }))\r\n        .catch(err => this.errHandler(err));\r\n      return { boardsObs: newOrder, message: \"actualizando ...\" };\r\n    });\r\n  };\r\n  createBoard = board => {\r\n    let token =\r\n      localStorage.getItem(\"UserToken\") || process.env.REACT_APP_DEFAULT_TOKEN;\r\n\r\n    if (this.state.boardsObs.includes(board)) {\r\n      this.setState({ message: \"Existe una board con ese nombre\" });\r\n      return;\r\n    }\r\n    let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\r\n    axios({\r\n      url: `${uri}/board`,\r\n      method: \"POST\",\r\n      headers: { token: token },\r\n      data: { boardTitle: board }\r\n    })\r\n      .then(res => this.setState({ message: \"se guardo exitosamente\" }))\r\n      .catch(err => this.errHandler(err));\r\n    this.setState(prevs => {\r\n      return {\r\n        boardsObs: [...prevs.boardsObs, board],\r\n        message: \"actualizando ...\"\r\n      };\r\n    });\r\n  };\r\n\r\n  _getBoards() {\r\n    let user =\r\n      localStorage.getItem(\"userName\") || process.env.REACT_APP_DEFAULT_USER;\r\n    if (this.state.firstFetch) {\r\n      let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\r\n      axios\r\n        .get(`${uri}/user/${user}`)\r\n        .then(res => {\r\n          this.setState({ boardsObs: res.data.boards, firstFetch: false });\r\n        })\r\n        .catch(err => console.log(err.message));\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this._getBoards();\r\n  }\r\n  componentDidUpdate() {\r\n    this._getBoards();\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <UpdateRes message={this.state.message} />\r\n        <div className=\"boardsContainer\">\r\n          <SortableList\r\n            helperClass=\"sortableCursor\"\r\n            items={this.state.boardsObs}\r\n            onSortEnd={this.onSortEnd}\r\n            useDragHandle={true}\r\n            removeBoard={this.removeBoard}\r\n            onCreateBoard={this.createBoard}\r\n            setMessage={messager => this.setState({ message: messager })}\r\n            axis=\"xy\"\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Boards;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst ShowRoute = props => {\r\n  let routes = props.location.pathname.split(\"/\");\r\n  routes.splice(0, 1);\r\n  routes.splice(0, 1);\r\n\r\n  routes.splice(0, 1);\r\n  return (\r\n    <div className=\"showRoute\">\r\n      <Link to=\"/Reacllo/\">\r\n        <p>Mis pizarras&nbsp;&nbsp;/&nbsp;&nbsp;</p>\r\n      </Link>\r\n      {routes.map(route => (\r\n        <p key={route}>{route}</p>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default ShowRoute;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./formLr.css\";\r\nconst Reg = props => {\r\n  const [user, setUser] = useState({ userName: \"\", password: \"\" });\r\n  const [err, setErr] = useState({ userName: \"\", password: \"\" });\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setUser({\r\n      ...user,\r\n      [name]: value\r\n    });\r\n    setErr({ ...err, ..._validateFields(name, value) });\r\n\r\n    setMessage(\"\");\r\n  };\r\n  const _validateFields = (name, value) => {\r\n    let err = {};\r\n    if (name === \"userName\") {\r\n      err.userName =\r\n        value.length >= 4\r\n          ? \"\"\r\n          : \"El nombre de usuario debe ser mayor a 4 caracteres\";\r\n    }\r\n    if (name === \"password\") {\r\n      err.password = /^(?=.*[A-Z]).{4,}$/.test(value)\r\n        ? \"\"\r\n        : \"La contraseña debe tener almenos una mayuscula y entre 4 caracteres \";\r\n    }\r\n    return err;\r\n  };\r\n  const errorHandler = err => {\r\n    if (\"Username already exists\" === err.response.data.message) {\r\n      setMessage(\"Ese nombre de usuario ya se encuentra en uso\");\r\n      setUser({ userName: \"\", password: \"\" });\r\n    }\r\n  };\r\n  const succesReqHandler = res => {\r\n    setMessage(\"se registro exitosamente, ingresando...\");\r\n\r\n    let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\r\n    axios({\r\n      url: `${uri}/user/login/`,\r\n      data: { ...user, Username: user.userName },\r\n      method: \"post\"\r\n    })\r\n      .then(res => {\r\n        localStorage.setItem(\"userName\", user.userName);\r\n        localStorage.setItem(\"UserToken\", res.data.token);\r\n        props.history.push(\"/boards\");\r\n      })\r\n      .catch(err => {});\r\n  };\r\n  const _checkUserFieldsEmpty = () => {\r\n    if (!user.userName) {\r\n      setErr({ ...err, userName: \"El campo se encuentra vacio\" });\r\n    }\r\n    if (!user.password) {\r\n      setErr({ ...err, password: \"El campo se encuentra vacio\" });\r\n    }\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    _checkUserFieldsEmpty();\r\n    if (err.userName || err.password) {\r\n      setMessage(\"No se puede registrar este usuario\");\r\n      return;\r\n    }\r\n    let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\r\n    axios({\r\n      url: `${uri}/user/register/`,\r\n      data: { ...user, Username: user.userName },\r\n      method: \"post\"\r\n    })\r\n      .then(res => succesReqHandler(res))\r\n      .catch(err => errorHandler(err));\r\n  };\r\n\r\n  //condicion y llamada a axios\r\n  const _isErrMessage = () => {\r\n    return ![\r\n      \"No se puede registrar este usuario\",\r\n      \"Ese nombre de usuario ya se encuentra en uso\"\r\n    ].includes(message);\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        borderTop: `3px solid ${_isErrMessage() ? \"#00ADBB\" : \"#e81123\"}`\r\n      }}\r\n      className=\"containerf\"\r\n    >\r\n      <form noValidate onSubmit={handleSubmit}>\r\n        <h3>Registrate</h3>\r\n        <div className=\"field\">\r\n          <label>Nombre de Usuario</label>\r\n          <div>\r\n            <input\r\n              style={{\r\n                borderBottom: `2px solid ${\r\n                  !err.userName ? \"rgba(28,110,164,0.13)\" : \"#e81123\"\r\n                }`\r\n              }}\r\n              name=\"userName\"\r\n              type=\"text\"\r\n              placeholder=\"Ingrese su nombre de usuario\"\r\n              value={user.userName}\r\n              onChange={handleChange}\r\n            />\r\n            {err.userName && <p className=\"error\">{err.userName}</p>}\r\n          </div>\r\n        </div>\r\n        <div className=\"field\">\r\n          <label>Constraseña</label>\r\n          <div>\r\n            <input\r\n              style={{\r\n                borderBottom: `2px solid ${\r\n                  !err.password ? \"rgba(28,110,164,0.13)\" : \"#e81123\"\r\n                }`\r\n              }}\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Ingrese su contraseña\"\r\n              value={user.password}\r\n              onChange={handleChange}\r\n            />\r\n            {err.password && <p className=\"error\">{err.password}</p>}\r\n          </div>\r\n        </div>\r\n        <button className=\"send\" type=\"Submit\">\r\n          Enviar\r\n        </button>\r\n        {message && (\r\n          <p\r\n            className=\"resMessage\"\r\n            style={{\r\n              color: _isErrMessage() ? \"#00ADBB\" : \"#e81123\"\r\n            }}\r\n          >\r\n            {message}\r\n          </p>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default Reg;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Reg = props => {\r\n  const [user, setUser] = useState({ userName: \"\", password: \"\" });\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setUser({\r\n      ...user,\r\n      [name]: value\r\n    });\r\n  };\r\n  const errorHandler = err => {\r\n    setUser({ ...user, password: \"\" });\r\n    setMessage(\"El usuario o la contraseña es incorrecta\");\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (!user.userName || !user.password) {\r\n      setMessage(\"Usuario o Contraseña vacias\");\r\n      setUser({ ...user, password: \"\" });\r\n      return;\r\n    }\r\n    setMessage(\"Ingresando...\");\r\n\r\n    let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\r\n    axios({\r\n      url: `${uri}/user/login/`,\r\n      data: { ...user, Username: user.userName },\r\n      method: \"post\"\r\n    })\r\n      .then(res => {\r\n        localStorage.removeItem(\"userName\");\r\n        localStorage.setItem(\"userName\", user.userName);\r\n        localStorage.removeItem(\"UserToken\");\r\n        localStorage.setItem(\"UserToken\", res.data.token);\r\n        props.history.push(\"/boards\");\r\n      })\r\n      .catch(err => errorHandler(err));\r\n\r\n    //condicion y llamada a axios\r\n  };\r\n  const _isErrMessage = () => {\r\n    return ![\r\n      \"Usuario o Contraseña vacias\",\r\n      \"El usuario o la contraseña es incorrecta\"\r\n    ].includes(message);\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        borderTop: `3px solid ${_isErrMessage() ? \"#00ADBB\" : \"#e81123\"}`\r\n      }}\r\n      className=\"containerf\"\r\n    >\r\n      <form noValidate onSubmit={handleSubmit}>\r\n        <h3>Ingresar</h3>\r\n        <div className=\"field\">\r\n          <label>Nombre de Usuario</label>\r\n          <div>\r\n            <input\r\n              name=\"userName\"\r\n              type=\"text\"\r\n              value={user.userName}\r\n              placeholder=\"Ingrese su nombre de usuario\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"field\">\r\n          <label>Constraseña</label>\r\n          <div>\r\n            <input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={user.password}\r\n              placeholder=\"Ingrese su contraseña\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <button className=\"send\" type=\"Submit\">\r\n          Iniciar Sesión\r\n        </button>\r\n        {message && (\r\n          <p\r\n            className=\"resMessage\"\r\n            style={{\r\n              color: _isErrMessage() ? \"#00ADBB\" : \"#e81123\"\r\n            }}\r\n          >\r\n            {message}\r\n          </p>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default Reg;\r\n","import React from \"react\";\r\nimport Register from \"./register\";\r\nimport Login from \"./login\";\r\n\r\nconst LoginReg = props => {\r\n  let loginWindow = props.match.path.toLocaleLowerCase().includes(\"register\");\r\n  return (\r\n    <div className=\"loginContainer\">\r\n      {(loginWindow && <Register {...props} />) || <Login {...props} />}\r\n    </div>\r\n  );\r\n};\r\nexport default LoginReg;\r\n","import React from \"react\";\r\nimport Nav from \"./nav/navBar\";\r\nimport BoardTest from \"./board/board\";\r\nimport Boards from \"./boards/boards\";\r\nimport ShowRoute from \"./nav/showRute\";\r\nimport LoginReg from \"./loginReg/loginReg\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  withRouter\r\n} from \"react-router-dom\";\r\nconst Root = () => {\r\n  const ShowRoutep = withRouter(props => <ShowRoute {...props} />);\r\n  const NavWithp = withRouter(props => <Nav {...props} />);\r\n  return (\r\n    <Router>\r\n      <NavWithp />\r\n      <ShowRoutep />\r\n      <Switch>\r\n        <Route exact path=\"/Reacllo/board/:boardTitle\" component={BoardTest} />\r\n        <Route exact path=\"/Reacllo/boards/\" component={Boards} />\r\n        <Route exact path=\"/Reacllo/register/\" component={LoginReg} />\r\n        <Route extact path=\"/Reacllo/login/\" component={LoginReg} />\r\n        <Redirect to=\"/Reacllo/boards/\" />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Root;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Root from \"./root\";\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/trash-can.d7bec4e6.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.8702dc53.svg\";","module.exports = __webpack_public_path__ + \"static/media/register2.6503aab5.svg\";","module.exports = __webpack_public_path__ + \"static/media/logout2.0dd955fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.aa72a69b.svg\";","module.exports = __webpack_public_path__ + \"static/media/grab.a3189f25.png\";"],"sourceRoot":""}