{"version":3,"sources":["nav/navBar.jsx","board/taskUtil.js","nav/updateRes.jsx","board/newTable.js","userUtil.js","board/board.js","boards/bf.js","boards/boardForm.js","boards/boards.js","nav/showRute.js","loginReg/register.js","loginReg/login.js","loginReg/loginReg.js","root.jsx","index.js","img/trash-can.svg","img/user.svg","img/register2.svg","img/logout2.svg","img/burger.svg","img/edit.svg","img/grab.png"],"names":["Buttons","showNavMobile","isLog","setDisplayNav","displayNav","props","className","to","onClick","history","localStorage","removeItem","src","logout","alt","userin","reg","Nav","getItem","userName","useState","burgerClass","burger","EditTaskW","close","errMessage","setErrMessage","editTask","task","ntRef","handleClickOutside","useEffect","document","addEventListener","removeEventListener","titleForm","buttonText","handleForm","e","preventDefault","form","target","title","value","description","taskTitle","CreateTaskW","addTask","EmptyFormTaskW","ref","style","borderTop","onSubmit","type","name","placeholder","maxLength","defaultValue","rows","color","TaskWiewer","useRef","current","contains","taskWiewerInfo","display","UpdateRes","message","messages","setMessage","reftitle","React","createRef","FormNewTable","tables","setTables","redirect","setDisplayform","createTable","errorMsg","setErrorMesg","filter","t","titleTable","length","match","params","boardTitle","class","NewTable","displayform","closeSession","getToken","process","openSession","token","setItem","boardName","axios","url","method","headers","data","tableTitle","then","res","catch","err","newTable","content","createTask","titlesinUse","setTitlesTask","tablesCopy","tableToAddtask","find","c","errMessageFunc","title2Verify","toLowerCase","has","push","add","tableToModifytask","oldTask","newTask","taskToModifyIndex","findIndex","titleTask2Remove","titleTask2Add","splice","titles","delete","taskTitleToRemove","response","status","pathname","TablesMapper","setTaskViewerinfo","setTaskTitles","map","table","key","tc","copyTables","JSON","parse","stringify","removeTable","droppableId","provided","snapshot","droppableProps","innerRef","backgroundColor","isDraggingOver","indx","draggableId","index","draggableProps","dragHandleProps","isDragging","taskIndex","removeTask","edit","tableID","Board","Set","taskTitlesinUse","undefined","latestProps","set2save","forEach","onDragEnd","result","tableTitleTo","tableTitleFrom","destination","rmItem","source","indexTo","indexTable","copytask","tablescopy","indexTableFrom","indexTableTo","tableFrom","tableTo","copyTaskFrom","copyTaskTo","Bf","setDisplay","rf","onCreateBoard","hasBoardName","setErrorMessage","event","nameBoard","titleNewBoard","borderBottom","CreateButton","BoardForm","wrapperRefForm","DragHandle","SortableHandle","hand","SortableList","SortableContainer","items","removeBoard","SortableItem","SortableElement","tabIndex","Boards","errHandler","setState","firstFetch","board","prev","copy","boardsObs","b","bind","onSortEnd","oldIndex","newIndex","newOrder","arrayMove","boardsOrder","createBoard","prevs","state","includes","location","user","this","get","boards","console","log","_getBoards","useDragHandle","messager","axis","Component","ShowRoute","routes","split","route","Reg","password","setUser","setErr","handleChange","test","_validateFields","_isErrMessage","noValidate","Username","succesReqHandler","errorHandler","onChange","setError","LoginReg","loginWindow","path","toLocaleLowerCase","Root","ShowRoutep","withRouter","NavWithp","exact","component","BoardTest","extact","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e73140a7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./nav.css\";\nimport userin from \"../img/user.svg\";\nimport reg from \"../img/register2.svg\";\nimport logout from \"../img/logout2.svg\";\nimport burger from  \"../img/burger.svg\"\n\nconst logOutUser = history => {\n  localStorage.removeItem(\"userName\");\n  localStorage.removeItem(\"UserToken\");\n};\n\nconst Nav = props => {\n  let isLog = localStorage.getItem(\"userName\");\n  let userName = localStorage.getItem(\"userName\") || \"UserTest\";\n  const [displayNav, setDisplayNav] = useState(false);\n  let burgerClass = displayNav ? \"hide\" : \"hide twist\"\n  let showNavMobile =  displayNav ? \"show buttons\": \"buttons\"\n  return (\n    <header >\n      <div className=\"logoNav\">\n        <Link to=\"/Reacllo/\" ><h2>Reacllo</h2></Link>\n      </div> \n      <div className=\"burger \"> \n      <img src={burger} className={burgerClass}\n          onClick={() => setDisplayNav(!displayNav)} alt=\"Menu\"/>\n      </div>\n      <div  className=\"userName\">\n          <Link to=\"/Reacllo/\">{userName}</Link>\n      </div>\n        <Buttons showNavMobile={showNavMobile} isLog={isLog} setDisplayNav={setDisplayNav} displayNav={displayNav} props={props}/>\n\n    </header>\n  );\n};\nconst Buttons= ({showNavMobile, isLog, setDisplayNav, displayNav,props}) => {\n\n  return ( isLog &&\n      <div className={showNavMobile}>\n        <Link to=\"/Reacllo/\" onClick={() => { setDisplayNav(!displayNav); logOutUser(props.history) }}>\n            <img src={logout} className=\"imgButton\" alt=\"cerrar sesión\" />\n            Cerrar sesión\n        </Link>  \n      </div>)\n        || (\n        <div className={showNavMobile}>\n            <Link to=\"/Reacllo/login/\" onClick={() => setDisplayNav(!displayNav)}>\n                <img src={userin} className=\"imgButton\" alt=\"Ingresa\" />\n                Ingresa\n            </Link>\n            <Link to=\"/Reacllo/register/\" onClick={() => setDisplayNav(!displayNav)}>\n                <img src={reg} className=\"imgButton\" alt=\"Registrate\" />\n                Registrate\n            </Link>\n        </div>\n  )         \n}\nexport default Nav;\n","import React, { useRef, useEffect, useState } from \"react\";\n\nconst TaskWiewer = (props) => {\n  let ntRef = useRef(null);\n  const handleClickOutside = (e) => {\n    if (ntRef.current && !ntRef.current.contains(e.target)) {\n      setErrMessage(\"\");\n      props.close();\n    }\n  };\n  const [errMessage, setErrMessage] = useState(\"\");\n\n  return (\n    props.taskWiewerInfo.display &&\n    ((!props.taskWiewerInfo.task && (\n      <CreateTaskW\n        {...props}\n        errMessage={errMessage}\n        ntRef={ntRef}\n        setErrMessage={setErrMessage}\n        handleClickOutside={handleClickOutside}\n      />\n    )) || (\n      <EditTaskW\n        {...props}\n        errMessage={errMessage}\n        ntRef={ntRef}\n        setErrMessage={setErrMessage}\n        handleClickOutside={handleClickOutside}\n        task={props.taskWiewerInfo.task}\n      />\n    ))\n  );\n};\nconst EditTaskW = ({\n  close,\n  errMessage,\n  setErrMessage,\n  editTask,\n  task,\n  ntRef,\n  handleClickOutside,\n}) => {\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, false);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, false);\n    };\n  });\n  const handleEditForm = (e) => {\n    e.preventDefault();\n    let form = e.target;\n    let title = form.title.value;\n    let description = form.description.value;\n    if (!title || !description) {\n      setErrMessage(\"necesita titulo y descripcion\");\n      return;\n    } else {\n      if (title === task.taskTitle && description === task.description) {\n        close();\n        setErrMessage('');\n      } else {\n        editTask(\n          task,\n          { taskTitle: title, description: description },\n          setErrMessage,\n          close\n        );\n      }\n    }\n  };\n  return (\n    <EmptyFormTaskW\n      titleForm=\"Editar Tarea\"\n      buttonText=\"Editar\"\n      close={close}\n      ntRef={ntRef}\n      handleForm={handleEditForm}\n      errMessage={errMessage}\n      title={task.taskTitle}\n      description={task.description}\n    />\n  );\n};\nconst CreateTaskW = ({\n  close,\n  errMessage,\n  setErrMessage,\n  addTask,\n  ntRef,\n  handleClickOutside,\n}) => {\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, false);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, false);\n    };\n  });\n  const handleCreateForm = (e) => {\n    e.preventDefault();\n    let form = e.target;\n    let title = form.title.value;\n    let description = form.description.value;\n    if (!title || !description) {\n      setErrMessage(\"necesita titulo y descripcion\");\n      return;\n    }\n    addTask(\n      { taskTitle: title, description: description },\n      setErrMessage,\n      close\n    );\n  };\n  return (\n    <EmptyFormTaskW\n      titleForm=\"Nueva Tarea\"\n      buttonText=\"Crear\"\n      close={close}\n      ntRef={ntRef}\n      handleForm={handleCreateForm}\n      errMessage={errMessage}\n    />\n  );\n};\nconst EmptyFormTaskW = ({\n  titleForm,\n  buttonText,\n  close,\n  ntRef,\n  title,\n  description,\n  handleForm,\n  errMessage,\n}) => {\n  return (\n    <div className=\"blackbackground\">\n      <div\n        ref={ntRef}\n        className=\"containerf task\"\n        style={{\n          borderTop: `3px solid ${!errMessage ? \"#00ADBB\" : \"#e81123\"}`,\n        }}\n      >\n        <form onSubmit={handleForm}>\n          <button\n            className=\"close\"\n            onClick={(e) => {\n              e.preventDefault();\n              close();\n            }}\n          >\n            x\n          </button>\n          <h3> {titleForm} </h3>\n          <div className=\"field\">\n            <label>Titulo</label>\n\n            <div>\n              <input\n                type=\"text\"\n                name=\"title\"\n                placeholder=\"Ingrese un titulo\"\n                maxLength=\"35\"\n                defaultValue={title || \"\"}\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label>Descripcion</label>\n            <textarea\n              rows=\"5\"\n              name=\"description\"\n              placeholder=\"Ingrese una descripción\"\n              maxLength=\"155\"\n              defaultValue={description || \"\"}\n            />\n          </div>\n          <button className=\"send\" type=\"submit\">\n            {buttonText}\n          </button>\n\n          {errMessage && (\n            <p\n              className=\"resMessage\"\n              style={{\n                color: \"#e81123\",\n              }}\n            >\n              {errMessage}\n            </p>\n          )}\n        </form>\n      </div>\n    </div>\n  );\n};\nexport default TaskWiewer;\n","import React, { useState, useEffect } from \"react\";\nimport \"./updateRes.css\";\nconst UpdateRes = ({ message }) => {\n  const [messages, setMessage] = useState(\"\");\n  useEffect(() => {\n    setMessage(message)\n  }, [message]);\n\n  return (\n    <>\n      {messages && (\n        <div className=\"updateRes\">\n          <p>{messages}</p>\n          <p onClick={() => setMessage(\"\")} className=\"closeUpdateRes\">\n            x\n          </p>\n        </div>\n      )}\n    </>\n  );\n};\nexport default UpdateRes;\n","import React, { useState} from \"react\";\nimport \"./board.css\";\nlet reftitle = React.createRef();\n\nconst NewTable = ({tables, setTables,props,setMessage, redirect, createTable})=>{\n    const [displayform, setDisplayform] = useState(false) \n   \n    return(displayform ?\n          <FormNewTable tables={tables}  setTables={setTables} setMessage={setMessage} props={props} redirect={redirect} setDisplayform={setDisplayform} createTable={createTable}/>\n          :\n          <div className=\"newTable\">\n            <button onClick={(e) => setDisplayform(true) } className=\"openForm\">Nueva tabla</button>\n          </div>\n          )\n  }\n  const FormNewTable= ({tables, setTables,props,setMessage, redirect, setDisplayform, createTable})=>{\n    const [errorMsg, setErrorMesg] = useState('')\n    const addNewTable = (e) => {\n      e.preventDefault();\n      if (reftitle.current.value) {\n        setErrorMesg('')\n        if (tables.filter((t) => t.titleTable === reftitle.current.value).length > 0) {\n          setErrorMesg(\"ya existe una tabla con ese nombre\");\n          return;\n        }\n        createTable(\n          reftitle.current.value,\n          tables,\n          setTables,\n          props.match.params.boardTitle,\n          setMessage,\n          redirect(props)\n        );\n        reftitle.current.value = \"\";\n        setDisplayform(false)\n      }\n      else{\n        setErrorMesg(\"Tiene que ingresar un nombre primero\")\n      }\n    }\n    return<div className=\"newTable\">\n    <form onSubmit={addNewTable}>\n      <label>Titulo</label><br/>\n      <input ref={reftitle} type=\"text\" className= {errorMsg ?\"error\":''}/>\n      <button title=\"Crear tabla\" type=\"submit\" >+</button>\n      <button title=\"Cancelar\" onClick={() =>  setDisplayform(false)} >x</button><br/>\n      { errorMsg && <label class=\"errorNewTable\">{errorMsg}</label>}\n    </form>\n  </div>\n  }\n  export default NewTable","export let closeSession=() => {\n    localStorage.removeItem(\"UserToken\");\n    localStorage.removeItem(\"userName\");\n}\nexport let getUserName=() => localStorage.getItem(\"userName\") || process.env.REACT_APP_DEFAULT_USER\n\nexport let getToken=() => localStorage.getItem(\"UserToken\") || process.env.REACT_APP_DEFAULT_TOKEN\n\nexport let openSession=(userName, token) => {\n    closeSession()\n    localStorage.setItem(\"userName\", userName);\n    localStorage.setItem(\"UserToken\", token);\n}","import React, { useState, useEffect, useRef } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport tc from \"../img/trash-can.svg\";\nimport edit from \"../img/edit.svg\";\nimport TaskWiewer from \"./taskUtil\";\nimport UpdateRes from \"../nav/updateRes\";\nimport \"./board.css\";\nimport axios from \"axios\";\nimport NewTable from  \"./newTable\"\nimport {getToken, closeSession} from \"../userUtil\";\n\n\nconst onDragEnd = (\n  result,\n  tables,\n  setTables,\n  boardName,\n  setMessage,\n  redirect\n) => {\n  let tableTitleTo;\n  let tableTitleFrom;\n\n  if (!result.destination) return;\n\n  let { source, destination } = result;\n  let indexTo = destination.index;\n  let rmItem;\n  if (destination.droppableId === source.droppableId) {\n    let indexTable = tables.findIndex(\n      (c) => c.titleTable === source.droppableId\n    );\n    let table = tables[indexTable];\n    let copytask = [...table.content];\n    let tablescopy = [...tables];\n    rmItem = copytask.splice(source.index, 1)[0];\n    copytask.splice(destination.index, 0, rmItem);\n    tablescopy.splice(indexTable, 1, {\n      ...table,\n      content: copytask,\n    });\n    tableTitleTo = destination.droppableId;\n    tableTitleFrom = destination.droppableId;\n    setTables(tablescopy);\n  }\n  if (destination.droppableId !== source.droppableId) {\n    let indexTableFrom = tables.findIndex(\n      (c) => c.titleTable === source.droppableId\n    );\n    let indexTableTo = tables.findIndex(\n      (c) => c.titleTable === destination.droppableId\n    );\n    let tableFrom = tables[indexTableFrom];\n    let tableTo = tables[indexTableTo];\n    let copyTaskFrom = [...tableFrom.content];\n    let copyTaskTo = [...tableTo.content];\n    let tablesCopy = [...tables];\n    rmItem = copyTaskFrom.splice(source.index, 1)[0];\n    copyTaskTo.splice(destination.index, 0, rmItem);\n    tablesCopy.splice(indexTableFrom, 1, {\n      ...tableFrom,\n      content: copyTaskFrom,\n    });\n    tablesCopy.splice(indexTableTo, 1, { ...tableTo, content: copyTaskTo });\n\n    tableTitleTo = destination.droppableId;\n    tableTitleFrom = source.droppableId;\n    setTables(tablesCopy);\n  }\n  let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\n\n  let token =\n    localStorage.getItem(\"UserToken\") || process.env.REACT_APP_DEFAULT_TOKEN;\n  axios({\n    url: `${uri}/board/table/`,\n    method: \"Patch\",\n    data: {\n      boardTitle: boardName,\n      tableTitleTo: tableTitleTo,\n      tableTitleFrom: tableTitleFrom,\n      taskTitle: rmItem.taskTitle,\n      indexTo: indexTo,\n    },\n    headers: { token: token },\n  })\n    .then(\n      (res) => setMessage(\"se reordeno la tarea correctamente\") //message confirm\n    )\n    .catch((err) => redirect(err));\n  setMessage(\"actualizando ...\");\n};\nconst removeTable = (\n  tableTitle,\n  tables,\n  setTables,\n  boardName,\n  setMessage,\n  redirect\n) => {\n  let copyTables = JSON.parse(\n    JSON.stringify(tables.filter((t) => t.titleTable !== tableTitle))\n  );\n\n  let token =\n    localStorage.getItem(\"UserToken\") || process.env.REACT_APP_DEFAULT_TOKEN;\n  let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\n  axios({\n    url: `${uri}/board/table/`,\n    method: \"Delete\",\n    headers: { token: token },\n    data: { boardTitle: boardName, tableTitle: tableTitle },\n  })\n    .then(\n      (res) => setMessage(\"se borro correctamente la tabla\") //message confirm\n    )\n    .catch((err) => redirect(err));\n  setTables(copyTables);\n\n  setMessage(\"actualizando ...\");\n};\nconst createTable = (\n  titleTable,\n  tables,\n  setTables,\n  boardName,\n  setMessage,\n  redirect\n) => {\n  let token = getToken()\n  let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\n  axios({\n    url: `${uri}/board/table/`,\n    method: \"Post\",\n    headers: { token: token },\n    data: { boardTitle: boardName, tableTitle: titleTable },\n  })\n    .then(\n      (res) =>\n        setMessage(\"se agrego correctamente la tabla\") /*message confirm */\n    )\n    .catch((err) => {\n      redirect(err);\n    });\n  let newTable = { titleTable: titleTable, content: [] };\n  setTables([...tables, newTable]);\n  setMessage(\"actualizando ...\");\n};\nconst createTask = (\n  titleTable,\n  tables,\n  setTables,\n  boardName,\n  setMessage,\n  redirect,\n  titlesinUse,\n  setTitlesTask\n) => {\n  let tablesCopy = [...tables];\n  let tableToAddtask = tablesCopy.find((c) => c.titleTable === titleTable);\n\n  return (task, errMessageFunc, close) => {\n    if (task) {\n      let title2Verify = task.taskTitle.toLowerCase();\n      if (titlesinUse.has(title2Verify)) {\n        errMessageFunc(\"ya existe una tarea con ese nombre\");\n        return;\n      }\n      let token =\n        localStorage.getItem(\"UserToken\") ||\n        process.env.REACT_APP_DEFAULT_TOKEN;\n      tableToAddtask.content.push(task);\n      let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\n      axios({\n        url: `${uri}/board/table/task/`,\n        method: \"Post\",\n        headers: { token: token },\n        data: { boardTitle: boardName, tableTitle: titleTable, task: task },\n      })\n        .then((res) => {\n          setMessage(\"se agrego correctamente la tarea\");\n          setTitlesTask((titlesinUse) => titlesinUse.add(title2Verify));\n        })\n        .catch((err) => redirect(err));\n      close();\n      setTables(tablesCopy);\n      setMessage(\"actualizando ...\");\n    }\n  };\n};\nconst removeTask = (\n  /*2 modify */\n  titleTable,\n  taskIndex,\n  task,\n  tables,\n  setTables,\n  boardName,\n  setMessage,\n  redirect,\n  setTitlesTask\n) => {\n  let copyTables = [...tables];\n  let table = copyTables.find((t) => t.titleTable === titleTable);\n  table.content.splice(taskIndex, 1);\n\n  let token =getToken()\n  let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\n  axios({\n    url: `${uri}/board/table/task/`,\n    method: \"delete\",\n    headers: { token: token },\n    data: {\n      boardTitle: boardName,\n      tableTitle: titleTable,\n      taskTitle: task.taskTitle,\n    },\n  })\n    .then((res) => {\n      setMessage(\"se borro correctamente la tarea\");\n      setTitlesTask((titles) => titles.delete(task.taskTitle.toLowerCase()));\n    })\n    .catch((err) => redirect(err));\n  setTables(copyTables);\n};\nconst editTask = (\n  /*a modify */\n  titleTable,\n  tables,\n  setTables,\n  boardName,\n  setMessage,\n  redirect,\n  titlesinUse,\n  setTitlesTask\n) => {\n  let tablesCopy = [...tables];\n  let tableToModifytask = tablesCopy.find((c) => c.titleTable === titleTable);\n\n  return (oldTask, newTask, errMessageFunc, close) => {\n    let taskToModifyIndex = tableToModifytask.content.findIndex(\n      (t) => t.taskTitle === oldTask.taskTitle\n    );\n    let titleTask2Remove = oldTask.taskTitle.toLowerCase();\n    let titleTask2Add = newTask.taskTitle.toLowerCase();\n    if (titleTask2Add === titleTask2Remove || !titlesinUse.has(titleTask2Add)) {\n      tableToModifytask.content.splice(taskToModifyIndex, 1, newTask);\n      setTables(tablesCopy); /* miss api call*/\n      setTitlesTask((titles) => {\n        titles.delete(titleTask2Remove);\n        return titles.add(titleTask2Add);\n      });\n      let token =getToken()\n      let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\n      axios({\n        url: `${uri}/board/table/task/`,\n        method: \"Patch\",\n        headers: { token: token },\n        data: {\n          boardTitle: boardName,\n          tableTitle: titleTable,\n          taskTitleToRemove: oldTask.taskTitle,\n          newTask: newTask,\n        },\n      })\n        .then((res) => {\n          setMessage(\"se modifico correctamente la tarea\");\n        })\n        .catch((err) => redirect(err));\n      close();\n      setTables(tablesCopy);\n      setMessage(\"actualizando ...\");\n    } else errMessageFunc(\"Ya existe una tarea con ese nombre\");\n  };\n};\nconst redirect = (props) => (err) => {\n  if (err.response.status === 401) {\n    closeSession()\n    props.history.push({\n      pathname: \"/boards\",\n      message:\n        \"La ultima accion no pudo guardarse debido a que los permisos del usuario caducaron, ingrese nuevamente \",\n    }); /*setear mensaje de log out */\n  }\n  if (\n    err.response.status === 400 &&\n    err.response.data.message === \"Board not found\"\n  ) {\n    props.history.push({\n      pathname: \"/boards\",\n      message: \"No existe una pizarra con ese titulo \",\n    });\n  } else {\n    props.history.push({\n      pathname: \"/boards\",\n      message: err.response.data.message,\n    });\n  }\n};\nfunction Board(props) {\n  const [tables, setTables] = useState([]);\n  const [taskTitlesinUse, setTaskTitles] = useState(new Set());\n  const [taskWiewerInfo, setTaskViewerinfo] = useState({\n    display: false /*cambiar a tipo de view (newTask, editTask, none) */,\n    tableID: undefined /*se tiene que quedar para crear la nueva tarea */,\n    task: null /*en el caso de editarla */,\n  });\n\n  const [message, setMessage] = useState(\"\");\n  const latestProps = useRef(props);\n  useEffect(() => {\n    latestProps.current = props;\n  });\n  useEffect(() => {\n    let token =\n      localStorage.getItem(\"UserToken\") || process.env.REACT_APP_DEFAULT_TOKEN;\n    let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\n    axios({\n      url: `${uri}/board/${latestProps.current.match.params.boardTitle}`,\n      method: \"Get\",\n      headers: { token: token },\n    })\n      .then((res) => {\n        setTables(res.data.tables);\n        let set2save = new Set();\n        res.data.tables.forEach((table) =>\n          table.content.forEach((task) =>\n            set2save.add(task.taskTitle.toLowerCase())\n          )\n        );\n        setTaskTitles(set2save);\n      })\n      .catch((err) => redirect(latestProps.current)(err));\n  }, []);\n  return (\n    <>\n      <TaskWiewer taskWiewerInfo={taskWiewerInfo}\n                  close={() =>\n                  setTaskViewerinfo({ display: false, tableID: undefined, task: null })\n                  }\n        addTask={createTask(\n          taskWiewerInfo.tableID,\n          tables,\n          setTables,\n          props.match.params.boardTitle,\n          setMessage,\n          redirect,\n          taskTitlesinUse,\n          setTaskTitles\n        )}\n        editTask={editTask(\n          taskWiewerInfo.tableID,\n          tables,\n          setTables,\n          props.match.params.boardTitle,\n          setMessage,\n          redirect,\n          taskTitlesinUse,\n          setTaskTitles\n        )}\n      />\n      <UpdateRes message={message} />\n      <div className=\"container boardW\">\n        <DragDropContext\n          onDragEnd={(result) =>\n            onDragEnd(\n              result,\n              tables,\n              setTables,\n              props.match.params.boardTitle,\n              setMessage,\n              redirect(props)\n            )\n          }\n        >\n          <TablesMapper\n            tables={tables}\n            setTables={setTables}\n            boardTitle={props.match.params.boardTitle}\n            setMessage={setMessage}\n            setTaskViewerinfo={setTaskViewerinfo}\n            setTaskTitles={setTaskTitles}\n            redirect={redirect(props)}\n          />\n        </DragDropContext>\n        <NewTable tables={tables}  setTables={setTables} setMessage={setMessage} props={props} redirect={redirect} createTable={createTable}/>\n      </div>\n    </>\n  );\n}\n\nconst TablesMapper = ({\n  tables,\n  setTables,\n  boardTitle,\n  setMessage,\n  setTaskViewerinfo,\n  redirect,\n  setTaskTitles,\n}) => {\n  return tables.map((table) => {\n    return (\n      <div key={table.titleTable} className=\"table\">\n        <h3 className=\"title\">{table.titleTable}</h3>\n        <img src={tc}\n          alt=\"\"\n          className=\"trashCan tablehide\"\n          title=\"borrar tabla\"\n          onClick={() =>\n            removeTable(\n              table.titleTable,\n              tables,\n              setTables,\n              boardTitle,\n              setMessage,\n              redirect\n            )\n          }\n        />\n        <hr/>\n        <Droppable key={table.titleTable} droppableId={table.titleTable}>\n          {(provided, snapshot) => {\n            return (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                className=\"listContainer\"\n                style={{\n                  backgroundColor: snapshot.isDraggingOver ? \"lightblue\" : \"\",\n                }}\n              >\n                {table.content.map((task, indx) => {\n                  return (\n                    <Draggable\n                      key={task.taskTitle}\n                      draggableId={task.taskTitle}\n                      index={indx}\n                    >\n                      {(provided, snapshot) => {\n                        return (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            className=\"itemList\"\n                            style={{\n                              backgroundColor: snapshot.isDragging\n                                ? \"#CFD8DC\"\n                                : \"\",\n                              ...provided.draggableProps.style,\n                            }}\n                          >\n                            <p className=\"titleTask\">{task.taskTitle}</p>\n                            <p className=\"description\">{task.description}</p>\n                            <img\n                              src={tc}\n                              className=\"trashCan taskhide\"\n                              title=\"borrar tarea\"\n                              alt=\"\"\n                              onClick={() => {\n                                removeTask(\n                                  table.titleTable,\n                                  indx,\n                                  task,\n                                  tables,\n                                  setTables,\n                                  boardTitle,\n                                  setMessage,\n                                  setTaskTitles\n                                );\n                              }}\n                            />\n                            <img\n                              src={edit}\n                              title=\"editar tarea\"\n                              className=\"edit\"\n                              alt=\"\"\n                              onClick={() =>\n                                setTaskViewerinfo({\n                                  display: true,\n                                  tableID: table.titleTable,\n                                  task: task,\n                                })\n                              }\n                            />\n                          </div>\n                        );\n                      }}\n                    </Draggable>\n                  );\n                })}\n                {provided.placeholder}\n              </div>\n            );\n          }}\n        </Droppable>\n        <hr/>\n        <div className=\"containerButtonNewTask\">\n          <button\n            title=\"crear una nueva tarea\"\n            className=\"btnNewTask\"\n            onClick={() =>\n              setTaskViewerinfo({\n                display: true,\n                tableID: table.titleTable /*edit aca new task */,\n              })\n            }\n          >+ agregar tarea</button>\n        </div>\n      </div>\n    );\n  });\n};\nexport default Board;\n","import React, { useEffect, useState } from \"react\";\n\n\n\nconst Bf = ({ setDisplay, rf, onCreateBoard, hasBoardName }) => {\n  const [err, setErrorMessage] = useState(\"\");\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, false);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, false);\n    };\n  });\n\n  const handleClickOutside = event => {\n    if (rf.current && !rf.current.contains(event.target)) {\n      setDisplay(false);\n    }\n  };\n  const handleCreate = e => {\n    e.preventDefault()\n    let nameBoard = e.target.titleNewBoard.value\n    if (!nameBoard) {\n      setErrorMessage(\"La pizarra tiene que tener un titulo\")\n      return\n    }\n    if (hasBoardName(nameBoard)){\n      setErrorMessage(\"Ya existe tabla con ese nombre\")\n      return\n    }\n    onCreateBoard(nameBoard)\n    setDisplay(false);\n  };\n  return (\n    <div ref={rf} className=\"board \">\n      <form onSubmit={handleCreate} className=\"formNewBoard\">\n        <label>Titulo</label><br/>\n        <input\n          type=\"text\"\n          name=\"titleNewBoard\"\n          className=\"titleNewBoard\"\n          style={{\n                borderBottom: ` ${\n                  err ? \"2px solid #e81123\" : \"\"\n                }`\n              }}\n        />\n        {err && <p className=\"error\">{err}</p>}\n        <button className=\"buttonCreateBoard\" type=\"submit\">\n          Crear\n        </button>\n        <button className=\"buttonCancelBoard\" onClick={  e => setDisplay(false)}>\n          Cancelar\n        </button>\n      </form>\n    </div>\n  );\n};\nexport default Bf;\n","import React, { useState, useRef } from \"react\";\nimport ButtonForm from \"./bf\";\n\nconst CreateButton = ({ setDisplay }) => {\n  return (\n    <div className=\"board containerButton\" onClick={() => setDisplay(true)}>\n      <button className=\"buttonFormBoard\">Nueva Pizarra</button>\n    </div>\n  );\n};\nconst BoardForm = props => {\n  let wrapperRefForm = useRef(null);\n  const [display, setDisplay] = useState(false);\n\n  return (\n    (display && (\n      <ButtonForm setDisplay={setDisplay} rf={wrapperRefForm} {...props} />\n    )) || <CreateButton setDisplay={setDisplay} />\n  );\n};\nexport default BoardForm;\n","import React, { Component } from \"react\";\nimport {\n  SortableContainer,\n  SortableElement,\n  SortableHandle\n} from \"react-sortable-hoc\";\nimport { Link } from \"react-router-dom\";\nimport arrayMove from \"array-move\";\nimport tc from \"../img/trash-can.svg\";\nimport hand from \"../img/grab.png\";\nimport \"./boards.css\";\nimport axios from \"axios\";\nimport UpdateRes from \"../nav/updateRes\";\nimport BoardForm from \"./boardForm\";\nimport {getToken, getUserName, closeSession} from \"../userUtil\";\n\nconst DragHandle = SortableHandle(() => {\n  return (\n    <span className=\"position \" title=\"arrastrame para reordenar\">\n      <img src={hand} alt=\"arrastrame\" />\n    </span>\n  );\n});\nconst SortableList = SortableContainer(({ items, removeBoard, onCreateBoard, setMessage, hasBoardName }) => {\n    return (\n      <ul>\n        {items.map((value, index) => (\n          <SortableItem\n            removeBoard={removeBoard}\n            key={`item-${value + index}`}\n            index={index}\n            value={value}\n          />\n        ))}\n        <li>\n          <BoardForm onCreateBoard={onCreateBoard} setMessage={setMessage} hasBoardName={hasBoardName}/>\n        </li>\n      </ul>\n    );\n});\n\nconst SortableItem = SortableElement(({ value, removeBoard }) => {\n  return (\n    <li tabIndex={value} /*position relative */>\n      <div className=\"board\">\n        <img src={tc}\n          className=\"trashCan boardhide boardt\"\n          title=\"remove board\"\n          alt=\"\"\n          onClick={() => {\n            removeBoard(value);\n          }}\n        />\n        <DragHandle />\n        <Link to={`/Reacllo/board/${value}`}>\n          {value}\n          <div className=\"rowContainer\">\n            <div className=\"row\" />\n            <div className=\"row\" />\n            <div className=\"row\" />\n          </div>\n        </Link>\n      </div>\n    </li>\n  );\n});\n\nclass Boards extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      boardsObs: [],\n      firstFetch: true,\n      message: props.location.message\n    };\n    this.setState = this.setState.bind(this);\n  }\n\n  errHandler = err => {\n    closeSession()\n    if (err.response.status === 401) {\n      this.setState({\n        message:\n          \"La ultima accion no pudo guardarse debido a que los permisos del usuario caducaron, logueese nuevamente\",\n        firstFetch: true\n      });\n    }\n  };\n\n  removeBoard = board => {\n    let token = getToken()\n    let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\n    axios({\n      url: `${uri}/board/`,\n      method: \"DELETE\",\n      headers: { token: token },\n      data: { boardTitle: board }\n    })\n      .then(res => this.setState({ message: \"se borro exitosamente\" }))\n      .catch(err => this.errHandler(err));\n\n    this.setState(prev => {\n      let copy = [...prev.boardsObs];\n      copy.splice(\n        copy.findIndex(b => b === board),\n        1\n      );\n      return { boardsObs: copy, message: \"actualizando ...\" };\n    });\n  };\n\n  removeBoard = this.removeBoard.bind(this);\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    this.setState(({ boardsObs }) => {\n      let token =\n        localStorage.getItem(\"UserToken\") ||\n        process.env.REACT_APP_DEFAULT_TOKEN;\n      let newOrder = arrayMove(boardsObs, oldIndex, newIndex);\n      let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\n      axios({\n        url: `${uri}/user/neworder`,\n        method: \"Patch\",\n        headers: { token: token },\n        data: { boardsOrder: newOrder }\n      })\n        .then(res => this.setState({ message: \"se reordeno exitosamente\" }))\n        .catch(err => this.errHandler(err));\n      return { boardsObs: newOrder, message: \"actualizando ...\" };\n    });\n  };\n  createBoard = board => {\n    let token = getToken()\n    let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\n    axios({\n      url: `${uri}/board`,\n      method: \"POST\",\n      headers: { token: token },\n      data: { boardTitle: board }\n    })\n      .then(res => this.setState({ message: \"se guardo exitosamente\" }))\n      .catch(err => this.errHandler(err));\n    this.setState(prevs => {\n      return {\n        boardsObs: [...prevs.boardsObs, board],\n        message: \"actualizando ...\"\n      };\n    });\n  };\n  hasBoardName = boardTitle => {\n    if (this.state.boardsObs.includes(boardTitle)) {\n      this.setState({ message: \"Existe una board con ese nombre\" });\n      return true\n    }\n     return false\n  }\n  hasBoardName = this.hasBoardName.bind(this);\n\n  _getBoards() {\n    let user = getUserName()\n      \n    if (this.state.firstFetch) {\n      let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\n      axios\n        .get(`${uri}/user/${user}`)\n        .then(res => {\n          this.setState({ boardsObs: res.data.boards, firstFetch: false });\n        })\n        .catch(err => console.log(err.message));\n    }\n  }\n  componentDidMount() {\n    this._getBoards();\n  }\n  componentDidUpdate() {\n    this._getBoards();\n  }\n  render() {\n    return (\n      <>\n        <UpdateRes message={this.state.message} />\n        <div className=\"container boards\">\n          <SortableList\n            items={this.state.boardsObs}\n            onSortEnd={this.onSortEnd}\n            useDragHandle={true}\n            removeBoard={this.removeBoard}\n            onCreateBoard={this.createBoard}\n            setMessage={messager => this.setState({ message: messager })}\n            hasBoardName={this.hasBoardName}\n            axis=\"xy\"\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Boards;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst ShowRoute = props => {\n  let routes = props.location.pathname.split(\"/\");\n  routes.splice(0, 1);\n  routes.splice(0, 1);\n\n  routes.splice(0, 1);\n  return (\n    <div className=\"showRoute\">\n      <Link to=\"/Reacllo/\">\n        Mis pizarras/ \n      </Link>\n      {routes.map(route => (\n        <p key={route}> {route} </p>\n      ))}\n    </div>\n  );\n};\nexport default ShowRoute;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./formLr.css\";\nimport {openSession} from \"../userUtil\";\n\nconst _validateFields = (name, value) => {\n  let err = {};\n  if (name === \"userName\") {\n    err.userName =\n      value.length >= 4\n        ? \"\"\n        : \"El nombre de usuario debe ser mayor a 4 caracteres\";\n  }\n  if (name === \"password\") {\n    err.password = /^(?=.*[A-Z]).{4,}$/.test(value)\n      ? \"\"\n      : \"La contraseña debe tener almenos una mayuscula y entre 4 caracteres \";\n  }\n  return err;\n};\n\nconst Reg = props => {\n  const [user, setUser] = useState({ userName: \"\", password: \"\" });\n  const [err, setErr] = useState({ userName: \"\", password: \"\" });\n  const [message, setMessage] = useState(\"\");\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setUser({\n      ...user,\n      [name]: value\n    });\n    setErr({ ...err, ..._validateFields(name, value) });\n\n    setMessage(\"\");\n  };\n\n  const errorHandler = err => {\n    if (\"Username already exists\" === err.response.data.message) {\n      setMessage(\"Ese nombre de usuario ya se encuentra en uso\");\n      setUser({ userName: \"\", password: \"\" });\n    }\n  };\n  const succesReqHandler = res => {\n    setMessage(\"se registro exitosamente, ingresando...\");\n\n    let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\n    axios({\n      url: `${uri}/user/login/`,\n      data: { ...user, Username: user.userName },\n      method: \"post\"\n    })\n      .then(res => {\n        openSession(user.userName,res.data.token)\n        props.history.push(\"/boards\");\n      })\n      .catch(err => {});\n  };\n  const _checkUserFieldsEmpty = () => {\n    if (!user.userName) {\n      setErr({ ...err, userName: \"El nomber se encuentra vacio\" });\n    }\n    if (!user.password) {\n      setErr({ ...err, password: \"La contraseña se encuentra vacia\" });\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    _checkUserFieldsEmpty();\n    if (err.userName || err.password) {\n      setMessage(\"No se puede registrar este usuario\");\n      return;\n    }\n    let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\n    axios({\n      url: `${uri}/user/register/`,\n      data: { ...user, Username: user.userName },\n      method: \"post\"\n    })\n      .then(res => succesReqHandler(res))\n      .catch(err => errorHandler(err));\n  };\n\n\n  const _isErrMessage = () => {\n    return ![\n      \"No se puede registrar este usuario\",\n      \"Ese nombre de usuario ya se encuentra en uso\"\n    ].includes(message);\n  };\n  return (\n    <div\n      style={{\n        borderTop: `3px solid ${_isErrMessage() ? \"#00ADBB\" : \"#e81123\"}`\n      }}\n      className=\"containerf\"\n    >\n      <form noValidate onSubmit={handleSubmit}>\n        <h3>Registrate</h3>\n        <div className=\"field\">\n          <label>Nombre de Usuario</label>\n          <div>\n            <input\n              style={{\n                borderBottom: `2px solid ${\n                  !err.userName ? \"rgba(28,110,164,0.13)\" : \"#e81123\"\n                }`\n              }}\n              name=\"userName\"\n              type=\"text\"\n              placeholder=\"Ingrese su nombre de usuario\"\n              value={user.userName}\n              onChange={handleChange}\n            />\n            {err.userName && <p className=\"error\">{err.userName}</p>}\n          </div>\n        </div>\n        <div className=\"field\">\n          <label>Constraseña</label>\n          <div>\n            <input\n              style={{\n                borderBottom: `2px solid ${\n                  !err.password ? \"rgba(28,110,164,0.13)\" : \"#e81123\"\n                }`\n              }}\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Ingrese su contraseña\"\n              value={user.password}\n              onChange={handleChange}\n            />\n            {err.password && <p className=\"error\">{err.password}</p>}\n          </div>\n        </div>\n        <button className=\"send\" type=\"Submit\">\n          Enviar\n        </button>\n        {message && (\n          <p\n            className=\"resMessage\"\n            style={{\n              color: _isErrMessage() ? \"#00ADBB\" : \"#e81123\"\n            }}\n          >\n            {message}\n          </p>\n        )}\n      </form>\n    </div>\n  );\n};\nexport default Reg;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport {openSession} from \"../userUtil\";\nconst Reg = props => {\n  const [user, setUser] = useState({ userName: \"\", password: \"\" });\n  const [err, setError] = useState({ userName: \"\", password: \"\" });\n  const [message, setMessage] = useState(\"\");\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setUser({\n      ...user,\n      [name]: value\n    });\n  };\n  const errorHandler = err => {\n    setUser({ ...user, password: \"\" });\n    setMessage(\"El usuario o la contraseña es incorrecta\");\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!user.userName ) {\n      setMessage(\"Error campo vacio\");\n      setError({ userName: \"Usuario vacio\", password: \"\" })\n      setUser({ ...user, password: \"\" });\n      return;\n    }\n    if (!user.password) {\n      setMessage(\"Error campo vacio\");\n      setError({ userName: \"\", password: \"Contraseña vacia\" })\n      setUser({ ...user, password: \"\" });\n      return;\n    }\n\n\n    setMessage(\"Ingresando...\");\n\n    let uri = process.env.REACT_APP_DEFAULT_URLBACKEND;\n    axios({\n      url: `${uri}/user/login/`,\n      data: { ...user, Username: user.userName },\n      method: \"post\"\n    })\n      .then(res => {\n        openSession(user.userName,res.data.token)\n        props.history.push(\"/boards\");\n      })\n      .catch(err => errorHandler(err));\n\n    //condicion y llamada a axios\n  };\n  const _isErrMessage = () => {\n    return ![\n      \"Error campo vacio\",\"El usuario o la contraseña es incorrecta\"].includes(message);\n  };\n  return (\n    <div\n      style={{\n        borderTop: `3px solid ${_isErrMessage() ? \"#00ADBB\" : \"#e81123\"}`\n      }}\n      className=\"containerf\"\n    >\n      <form noValidate onSubmit={handleSubmit}>\n        <h3>Ingresar</h3>\n        <div className=\"field\">\n          <label>Nombre de Usuario</label>\n          <div>\n            <input\n              name=\"userName\"\n              type=\"text\"\n              value={user.userName}\n              placeholder=\"Ingrese su nombre de usuario\"\n              onChange={handleChange}\n              style={{\n                borderBottom: `2px solid ${\n                  !err.userName ? \"rgba(28,110,164,0.13)\" : \"#e81123\"\n                }`\n              }}\n            />\n             {err.userName && <p className=\"error\">{err.userName}</p>}\n          </div>\n        </div>\n        <div className=\"field\">\n          <label>Constraseña</label>\n          <div  >\n            <input\n              name=\"password\"\n              type=\"password\"\n              value={user.password}\n              placeholder=\"Ingrese su contraseña\"\n              onChange={handleChange}\n              style={{\n                borderBottom: `2px solid ${\n                  !err.password ? \"rgba(28,110,164,0.13)\" : \"#e81123\"\n                }`\n              }}\n            />\n             {err.password && <p className=\"error\">{err.password}</p>}\n          </div>\n        </div>\n        <button className=\"send\" type=\"Submit\">\n          Iniciar Sesión\n        </button>\n        {message && (\n          <p\n            className=\"resMessage\"\n            style={{\n              color: _isErrMessage() ? \"#00ADBB\" : \"#e81123\"\n            }}\n          >\n            {message}\n          </p>\n        )}\n      </form>\n    </div>\n  );\n};\nexport default Reg;\n","import React from \"react\";\nimport Register from \"./register\";\nimport Login from \"./login\";\n\nconst LoginReg = props => {\n  let loginWindow = props.match.path.toLocaleLowerCase().includes(\"register\");\n  return (\n    <div className=\"loginContainer\">\n      {(loginWindow && <Register {...props} />) || <Login {...props} />}\n    </div>\n  );\n};\nexport default LoginReg;\n","import React from \"react\";\nimport Nav from \"./nav/navBar\";\nimport BoardTest from \"./board/board\";\nimport Boards from \"./boards/boards\";\nimport ShowRoute from \"./nav/showRute\";\nimport LoginReg from \"./loginReg/loginReg\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  withRouter\n} from \"react-router-dom\";\nconst Root = () => {\n  const ShowRoutep = withRouter(props => <ShowRoute {...props} />);\n  const NavWithp = withRouter(props => <Nav {...props} />);\n  return (\n   <Router>\n    <div className=\"content\">\n      <NavWithp />\n      <ShowRoutep />\n      <Switch>\n        <Route exact path=\"/Reacllo/board/:boardTitle\" component={BoardTest} />\n        <Route exact path=\"/Reacllo/boards/\" component={Boards} />\n        <Route exact path=\"/Reacllo/register/\" component={LoginReg} />\n        <Route extact path=\"/Reacllo/login/\" component={LoginReg} />\n        <Redirect to=\"/Reacllo/boards/\" />\n      </Switch>\n    </div>\n  </Router>\n   \n  );\n};\n\nexport default Root;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Root from \"./root\";\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/trash-can.d7bec4e6.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.8702dc53.svg\";","module.exports = __webpack_public_path__ + \"static/media/register2.08a5405f.svg\";","module.exports = __webpack_public_path__ + \"static/media/logout2.cab047d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/burger.86595150.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.aa72a69b.svg\";","module.exports = __webpack_public_path__ + \"static/media/grab.a3189f25.png\";"],"sourceRoot":""}